{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.]+"},"docs":[{"location":"","text":"Welcome to Rui\u2019s Blog \u00b6","title":"Welcome to Rui's Blog"},{"location":"#welcome-to-ruis-blog","text":"","title":"Welcome to Rui's Blog"},{"location":"notes_linux/Linux/","text":"Linux Notes \u00b6 The normal settings for /tmp are 1777, which ls shows as drwxrwxrwt. That is: wide open, except that only the owner of a file can remove it (that\u2019s what this extra t bit means for a directory). Nice commands \u00b6 find duplicate files, generate rm command to remove old same size file to make it remove duplicates, remove echo from xargs. 1 for FILE in * ; do stat -c \"%s/%n\" \" $FILE \" ; done | awk -F/ '{if ($1 in a)print $2; else a[$1]=1}' | xargs echo rm shell programing tips \u00b6 enable xtrace for shell script The set -x option instructs bash to print commands and their arguments as they are executed. The set -x option instructs bash to print shell input lines as they are read. Unofficial Bash Strict Mode The set -e option instructs bash to immediately exit if any command has a non-zero exit status. The set -u option instructs bash to immediately exit if a reference to any variable you haven\u2019t previously defined - with the exceptions of $* and $@. The set -o pipefail option instructs bash to prevents errors in a pipeline from being masked. Setting IFS to $\u2019\\n\\t\u2019 means that word splitting will happen only on newlines and tab characters. 1 2 3 4 5 6 7 #!/usr/bin/env bash # Uncomment following line for Debugging # set -xv set -euo pipefail IFS = $'\\n\\t' export LC_ALL = C awk example \u00b6 split and print 1 awk '{FS=\",\"} {print $6}' expect example \u00b6 handle first time ssh login 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 expect <<EOF set timeout 10 spawn ssh root@$TARGET_IP expect { \"Password\" {send \"$PWD\\r\";} \"yes/no\" {send \"yes\\r\";exp_continue} } expect \"#*\" send \"mv $BIN $BIN.bak;\\r\" send \"exit\\r\" expect eof EOF coredump file check simple example \u00b6 to check where coredump file will be generate 1 cat /proc/sys/kernel/core_pattern 1 2 3 4 readelf -h core.21437 objdump86 -x core.21437 objdump -x core.21437 gdb test core.21437 grep usage \u00b6 To search the string in a single file, grep file1.txt -e \u2018techieshouts\u2019 To search the full word and not the substring, grep -w file1.txt -e \u2018techieshouts\u2019 To search the full word by ignoring case sensitiveness, grep -wi file1.txt -e \u2018techieshouts\u2019 To search all the files recursively in the directory for the same word, grep -wir /directory -e \u2018techieshouts\u2019 To search and get the line number of the word in all the files grep -wirn /directory -e \u2018techieshouts\u2019 To search and get only the file names that contain the word grep -wirl /directory -e \u2018techieshouts\u2019","title":"Linux Notes"},{"location":"notes_linux/Linux/#linux-notes","text":"The normal settings for /tmp are 1777, which ls shows as drwxrwxrwt. That is: wide open, except that only the owner of a file can remove it (that\u2019s what this extra t bit means for a directory).","title":"Linux Notes"},{"location":"notes_linux/Linux/#nice-commands","text":"find duplicate files, generate rm command to remove old same size file to make it remove duplicates, remove echo from xargs. 1 for FILE in * ; do stat -c \"%s/%n\" \" $FILE \" ; done | awk -F/ '{if ($1 in a)print $2; else a[$1]=1}' | xargs echo rm","title":"Nice commands"},{"location":"notes_linux/Linux/#shell-programing-tips","text":"enable xtrace for shell script The set -x option instructs bash to print commands and their arguments as they are executed. The set -x option instructs bash to print shell input lines as they are read. Unofficial Bash Strict Mode The set -e option instructs bash to immediately exit if any command has a non-zero exit status. The set -u option instructs bash to immediately exit if a reference to any variable you haven\u2019t previously defined - with the exceptions of $* and $@. The set -o pipefail option instructs bash to prevents errors in a pipeline from being masked. Setting IFS to $\u2019\\n\\t\u2019 means that word splitting will happen only on newlines and tab characters. 1 2 3 4 5 6 7 #!/usr/bin/env bash # Uncomment following line for Debugging # set -xv set -euo pipefail IFS = $'\\n\\t' export LC_ALL = C","title":"shell programing tips"},{"location":"notes_linux/Linux/#awk-example","text":"split and print 1 awk '{FS=\",\"} {print $6}'","title":"awk example"},{"location":"notes_linux/Linux/#expect-example","text":"handle first time ssh login 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 expect <<EOF set timeout 10 spawn ssh root@$TARGET_IP expect { \"Password\" {send \"$PWD\\r\";} \"yes/no\" {send \"yes\\r\";exp_continue} } expect \"#*\" send \"mv $BIN $BIN.bak;\\r\" send \"exit\\r\" expect eof EOF","title":"expect example"},{"location":"notes_linux/Linux/#coredump-file-check-simple-example","text":"to check where coredump file will be generate 1 cat /proc/sys/kernel/core_pattern 1 2 3 4 readelf -h core.21437 objdump86 -x core.21437 objdump -x core.21437 gdb test core.21437","title":"coredump file check simple example"},{"location":"notes_linux/Linux/#grep-usage","text":"To search the string in a single file, grep file1.txt -e \u2018techieshouts\u2019 To search the full word and not the substring, grep -w file1.txt -e \u2018techieshouts\u2019 To search the full word by ignoring case sensitiveness, grep -wi file1.txt -e \u2018techieshouts\u2019 To search all the files recursively in the directory for the same word, grep -wir /directory -e \u2018techieshouts\u2019 To search and get the line number of the word in all the files grep -wirn /directory -e \u2018techieshouts\u2019 To search and get only the file names that contain the word grep -wirl /directory -e \u2018techieshouts\u2019","title":"grep usage"},{"location":"notes_linux/nfs/","text":"Steps to setup NFS \u00b6 Installing NFS Server and NFS Client \u00b6 install 1 2 3 # \u201cyum\u201d (Red Hat Linux) as example [ root@nfsserver ~ ] # yum install nfs-utils nfs-utils-lib [ root@nfsserver ~ ] # yum install portmap (not required with NFSv4) Start the services on both machines. 1 2 3 4 [ root@nfsserver ~ ] # /etc/init.d/portmap start [ root@nfsserver ~ ] # /etc/init.d/nfs start [ root@nfsserver ~ ] # chkconfig --level 35 portmap on [ root@nfsserver ~ ] # chkconfig --level 35 nfs on Setting Up the NFS Server \u00b6 Configure Export directory 1 2 3 4 5 6 [ root@nfsserver ~ ] # mkdir /nfsshare [ root@nfsserver ~ ] # vi /etc/exports /nfsshare 192 .168.0.101 ( rw,sync,no_root_squash ) [ root@nfsserver ~ ] # exportfs -rv NFS Options ro: With the help of this option we can provide read only access to the shared files i.e client will only be able to read. rw: This option allows the client server to both read and write access within the shared directory. sync: Sync confirms requests to the shared directory only once the changes have been committed. no_subtree_check: This option prevents the subtree checking. When a shared directory is the subdirectory of a larger file system, nfs performs scans of every directory above it, in order to verify its permissions and details. Disabling the subtree check may increase the reliability of NFS, but reduce security. no_root_squash: This phrase allows root to connect to the designated directory. Config firewall 1 2 3 4 5 [ root@nfsserver ~ ] # firewall-cmd --permanent --add-service=rpc-bind [ root@nfsserver ~ ] # firewall-cmd --permanent --add-service=mountd [ root@nfsserver ~ ] # firewall-cmd --permanent --add-port=2049/tcp [ root@nfsserver ~ ] # firewall-cmd --permanent --add-port=2049/udp [ root@nfsserver ~ ] # firewall-cmd --reload Auto run after reboot 1 [ root@nfsserver ~ ] # systemctl enable rpcbind nfs-server show NFS share 1 2 3 [ root@nfsserver ~ ] # showmount --exports [ root@nfsserver ~ ] # exportfs -v [ root@nfsserver ~ ] # cat /var/lib/nfs/etab Restart NFS service 1 [ root@nfsserver ~ ] # systemctl restart rpcbind nfs-server List NFS clients connected to NFS server 1 2 [ root@nfsserver ~ ] # netstat -l | grep :nfs [ root@nfsserver ~ ] # ss -a | grep :nfs Setting Up the NFS Client \u00b6 Mount Shared Directories on NFS Client 1 2 3 4 [ root@nfsclient ~ ] # showmount -e 192.168.0.100 Export list for 192 .168.0.100: /nfsshare 192 .168.0.101 Mount Shared NFS Directory 1 [ root@nfsclient ~ ] # mount -t nfs 192.168.0.100:/nfsshare /mnt/nfsshare Check Mount infomation 1 2 3 4 [ root@nfsclient ~ ] # df \u2013h [ root@nfsclient ~ ] # mounnt # which is equal with [ root@nfsclient ~ ] # cat /proc/mounts We need to make an entry in \u201c/etc/fstab\u201c to mount an NFS directory permanently on your system across the reboots. 1 2 3 [ root@nfsclient ~ ] # vi /etc/fstab 192 .168.0.100:/nfsshare /mnt nfs defaults 0 0 Removing the NFS Mount \u00b6 1 2 [ root@nfsclient ~ ] # umount /mnt/nfsshare [ root@nfsclient ~ ] # df -h -F nfs Important commands for NFS \u00b6 showmount -e : Shows the available shares on your local machine showmount -e server-ip : Lists the available shares at the remote server showmount -d : Lists all the sub directories exportfs -v : Displays a list of shares files and options on a server exportfs -a : Exports all shares listed in /etc/exports, or given name exportfs -u : Unexports all shares listed in /etc/exports, or given name exportfs -r : Refresh the server\u2019s list after modifying /etc/exports netstat -tulpen | grep 2049 : show nfs port status rpcinfo -p server-ip : Lists the available RPC infomation at the remote server cat /var/lib/nfs/etab :\u3000check NFS detail configurations","title":"how to setup NFS service"},{"location":"notes_linux/nfs/#steps-to-setup-nfs","text":"","title":"Steps to setup NFS"},{"location":"notes_linux/nfs/#installing-nfs-server-and-nfs-client","text":"install 1 2 3 # \u201cyum\u201d (Red Hat Linux) as example [ root@nfsserver ~ ] # yum install nfs-utils nfs-utils-lib [ root@nfsserver ~ ] # yum install portmap (not required with NFSv4) Start the services on both machines. 1 2 3 4 [ root@nfsserver ~ ] # /etc/init.d/portmap start [ root@nfsserver ~ ] # /etc/init.d/nfs start [ root@nfsserver ~ ] # chkconfig --level 35 portmap on [ root@nfsserver ~ ] # chkconfig --level 35 nfs on","title":"Installing NFS Server and NFS Client"},{"location":"notes_linux/nfs/#setting-up-the-nfs-server","text":"Configure Export directory 1 2 3 4 5 6 [ root@nfsserver ~ ] # mkdir /nfsshare [ root@nfsserver ~ ] # vi /etc/exports /nfsshare 192 .168.0.101 ( rw,sync,no_root_squash ) [ root@nfsserver ~ ] # exportfs -rv NFS Options ro: With the help of this option we can provide read only access to the shared files i.e client will only be able to read. rw: This option allows the client server to both read and write access within the shared directory. sync: Sync confirms requests to the shared directory only once the changes have been committed. no_subtree_check: This option prevents the subtree checking. When a shared directory is the subdirectory of a larger file system, nfs performs scans of every directory above it, in order to verify its permissions and details. Disabling the subtree check may increase the reliability of NFS, but reduce security. no_root_squash: This phrase allows root to connect to the designated directory. Config firewall 1 2 3 4 5 [ root@nfsserver ~ ] # firewall-cmd --permanent --add-service=rpc-bind [ root@nfsserver ~ ] # firewall-cmd --permanent --add-service=mountd [ root@nfsserver ~ ] # firewall-cmd --permanent --add-port=2049/tcp [ root@nfsserver ~ ] # firewall-cmd --permanent --add-port=2049/udp [ root@nfsserver ~ ] # firewall-cmd --reload Auto run after reboot 1 [ root@nfsserver ~ ] # systemctl enable rpcbind nfs-server show NFS share 1 2 3 [ root@nfsserver ~ ] # showmount --exports [ root@nfsserver ~ ] # exportfs -v [ root@nfsserver ~ ] # cat /var/lib/nfs/etab Restart NFS service 1 [ root@nfsserver ~ ] # systemctl restart rpcbind nfs-server List NFS clients connected to NFS server 1 2 [ root@nfsserver ~ ] # netstat -l | grep :nfs [ root@nfsserver ~ ] # ss -a | grep :nfs","title":"Setting Up the NFS Server"},{"location":"notes_linux/nfs/#setting-up-the-nfs-client","text":"Mount Shared Directories on NFS Client 1 2 3 4 [ root@nfsclient ~ ] # showmount -e 192.168.0.100 Export list for 192 .168.0.100: /nfsshare 192 .168.0.101 Mount Shared NFS Directory 1 [ root@nfsclient ~ ] # mount -t nfs 192.168.0.100:/nfsshare /mnt/nfsshare Check Mount infomation 1 2 3 4 [ root@nfsclient ~ ] # df \u2013h [ root@nfsclient ~ ] # mounnt # which is equal with [ root@nfsclient ~ ] # cat /proc/mounts We need to make an entry in \u201c/etc/fstab\u201c to mount an NFS directory permanently on your system across the reboots. 1 2 3 [ root@nfsclient ~ ] # vi /etc/fstab 192 .168.0.100:/nfsshare /mnt nfs defaults 0 0","title":"Setting Up the NFS Client"},{"location":"notes_linux/nfs/#removing-the-nfs-mount","text":"1 2 [ root@nfsclient ~ ] # umount /mnt/nfsshare [ root@nfsclient ~ ] # df -h -F nfs","title":"Removing the NFS Mount"},{"location":"notes_linux/nfs/#important-commands-for-nfs","text":"showmount -e : Shows the available shares on your local machine showmount -e server-ip : Lists the available shares at the remote server showmount -d : Lists all the sub directories exportfs -v : Displays a list of shares files and options on a server exportfs -a : Exports all shares listed in /etc/exports, or given name exportfs -u : Unexports all shares listed in /etc/exports, or given name exportfs -r : Refresh the server\u2019s list after modifying /etc/exports netstat -tulpen | grep 2049 : show nfs port status rpcinfo -p server-ip : Lists the available RPC infomation at the remote server cat /var/lib/nfs/etab :\u3000check NFS detail configurations","title":"Important commands for NFS"},{"location":"notes_linux/ubuntu/","text":"Ubuntu 16.04 Developer Tools Installation \u00b6 First things first ! 1 2 sudo apt update sudo apt upgrade Standard Developer Tools \u00b6 1 sudo apt-get install build-essential git Virtualbox Guest Utlities for Shared Drive and Clipboard (optional) \u00b6 1 2 3 4 sudo apt install dkms build-essential linux-headers- ` uname -r ` sudo apt install virtualbox-guest-utils virtualbox-guest-dkms # To access shared drive on nautilus folder sudo addgroup <YOUR USERNAME> vboxsf Python Development \u00b6 1 sudo apt-get install python-dev python-pip python-virtualenv python-numpy python-matplotlib Virtualenv Wrapper Installation \u00b6 1 2 3 4 5 6 sudo pip install virtualenvwrapper echo \"source /usr/local/bin/virtualenvwrapper.sh\" >> ~/.bashrc # Create Virtualenv (env location is ~/.virtualenvs) mkvirtualenv <env_name> # select virtualenv workon <env_name> pip packages \u00b6 For Machine Learning 1 2 3 4 5 6 # Create Virtualenv mkvirtualenv ML # Activate it workon ML # Install packages (if behinde proxy use pip install --proxy=<proxy_address>) pip install scipy scikit-learn matplotlib jupyter pandas numpy tensorflow keras seaborn For Web Development 1 2 3 4 5 6 # Create Virtualenv mkvirtualenv web # Activate it workon web # Install packages (if behinde proxy use pip install --proxy=<proxy_address>) pip install django beautifulsoup4 requests ipython Compiler Development \u00b6 1 sudo apt install flex bison Networking tools \u00b6 1 sudo apt install libpcap-dev libnet1-dev rpcbind openssh-server nmap Computer Vision or Image Processing with OpenCV \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 sudo apt install python-numpy cd ~ # Clone latest codebase for opencv (do git checkout for specific version) git clone https://github.com/Itseez/opencv.git # Clone opencv contrib plugins git clone https://github.com/Itseez/opencv_contrib.git # install prerequisites sudo apt-get install cmake pkg-config libjpeg8-dev libtiff-dev libjasper-dev libpng12-dev libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libatlas-base-dev gfortran libopencv-dev build-essential checkinstall cmake pkg-config yasm libtiff5-dev libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy libtbb-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils ffmpeg libgphoto2-dev # Start Build Process cd opencv mkdir build cd build cmake -D CMAKE_BUILD_TYPE = RELEASE -D CMAKE_INSTALL_PREFIX = /usr/local -D INSTALL_C_EXAMPLES = ON -D INSTALL_PYTHON_EXAMPLES = ON -D OPENCV_EXTRA_MODULES_PATH = ../../opencv_contrib/modules -D BUILD_EXAMPLES = ON -D WITH_QT = ON -D WITH_OPENGL = ON .. make -j4 sudo make install sudo ldconfig Parallel Processing with OpenMPI \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 #install pre-requisites sudo apt-get install libibnetdisc-dev # download codebase wget https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.2.tar.gz # extract tar -xzvf openmpi-1.10.2.tar.gz # configure and build ./configure --prefix = \"~/.openmpi\" make -j4 sudo make install echo \"export PATH= $PATH : $HOME /.openmpi/bin\" >> ~/.bashrc echo \"export LD_LIBRARY_PATH= $LD_LIBRARY_PATH : $HOME /.openmpi/lib/\" >> ~/.bashrc Android tools \u00b6 1 sudo apt install android-tools-adb android-tools-fastboot Media tools \u00b6 1 sudo apt install flashplugin-installer vlc ffmpeg Editor \u00b6 install vim 1 sudo apt install vim Install Atom Editor download 1 sudo dpkg -i atom-amd64.dev Install Visual Studio Code download 1 sudo dpkg -i code_<version>.deb Ubuntu Customization (Theme and Icons) \u00b6 Install Gnome Tweak Tool 1 2 3 4 sudo apt install gnome-tweak-tool # Create Theme and Icon directory mkdir ~/.icons ~/.themes Download Themes and Icons, Place it under respective directory and open tweak tool select your themes Suggested Themes and Flatabulous Paper-Theme Paper-Icon-Theme Install ZSH \u00b6 1 2 3 sudo apt install zsh curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh chsh -s ` which zsh ` Web Development in PHP with Apache2 Web Server \u00b6 1 2 3 4 5 #Install apache2 and php sudo apt install apache2 apache2-utils libapache2-mod-php sudo apt install php php-dev php-mcrypt php-mysql php-mbstring php-dom # Enable mod_rewrite for apache2 sudo a2enmod rewrite Configure index.php for priorities add index.php sudo nano /etc/apache2/mods-available/dir.conf 1 2 3 <IfModule mod_dir.c> DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm </IfModule> Configure Mod Rewrite sudo nano /etc/apache2/sites-available/000-default.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <VirtualHost *:80> ServerAdmin webmaster@localhost DocumentRoot /var/www/html <Directory /var/www/html> Options FollowSymLinks MultiViews Indexes AllowOverride All Order allow,deny allow from all </Directory> ErrorLog ${ APACHE_LOG_DIR } /error.log CustomLog ${ APACHE_LOG_DIR } /access.log combined </VirtualHost> Reload Apache sudo service apache2 restart Java Development \u00b6 1 2 3 4 # install jdk sudo apt install openjdk-8-jdk # install maven sudo apt install maven Install eclipse dowload Ruby Development \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # install pre requisites sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev # clone rbenv git clone https://github.com/rbenv/rbenv.git ~/.rbenv git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build git clone https://github.com/rbenv/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash # add configuration to bashrc echo \"export PATH= $PATH : $HOME /.rbenv/bin: $HOME /.rbenv/shims\" >> ~/.bashrc echo \"eval $( rbenv init - ) \" >> ~/.bashrc echo \"export PATH= $HOME /.rbenv/plugins/ruby-build/bin: $PATH \" >> ~/.bashrc # install and set specific ruby version rbenv install 2 .3.0 rbenv global 2 .3.0 # install some gems gem install bundler jekyll mysql2 rails jekyll-pagedown Database \u00b6 1 2 3 4 5 6 # install nosql database sudo apt install mongodb-server # install sqlite3 for smaller db sudo apt install libsqlite3-dev sqlite3 # mysql community version installation sudo apt install mysql-server libmysqlclient-dev NodeJs Development \u00b6 1 2 3 curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - sudo apt-get install -y nodejs sudo npm install -g grunt-cli yarn @angular/cli ASP.NET Development \u00b6 1 2 3 4 5 6 7 sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF echo \"deb http://download.mono-project.com/repo/debian wheezy main\" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list sudo apt update # install mono libraries sudo apt install mono-devel mono-complete referenceassemblies-pcl ca-certificates-mono mono-xsp4 # install mono ide sudo apt install monodevelop-nunit monodevelop-versioncontrol monodevelop-database CLoud Storage (Dropbox) \u00b6 1 2 3 cd ~ && wget -O - \"https://www.dropbox.com/download?plat=lnx.x86_64\" | tar xzf - # to start dropbox sh ~/.dropbox-dist/dropboxd","title":"Ubuntu 16.04 Developer Tools Installation"},{"location":"notes_linux/ubuntu/#ubuntu-1604-developer-tools-installation","text":"First things first ! 1 2 sudo apt update sudo apt upgrade","title":"Ubuntu 16.04 Developer Tools Installation"},{"location":"notes_linux/ubuntu/#standard-developer-tools","text":"1 sudo apt-get install build-essential git","title":"Standard Developer Tools"},{"location":"notes_linux/ubuntu/#virtualbox-guest-utlities-for-shared-drive-and-clipboard-optional","text":"1 2 3 4 sudo apt install dkms build-essential linux-headers- ` uname -r ` sudo apt install virtualbox-guest-utils virtualbox-guest-dkms # To access shared drive on nautilus folder sudo addgroup <YOUR USERNAME> vboxsf","title":"Virtualbox Guest Utlities for Shared Drive and Clipboard (optional)"},{"location":"notes_linux/ubuntu/#python-development","text":"1 sudo apt-get install python-dev python-pip python-virtualenv python-numpy python-matplotlib","title":"Python Development"},{"location":"notes_linux/ubuntu/#virtualenv-wrapper-installation","text":"1 2 3 4 5 6 sudo pip install virtualenvwrapper echo \"source /usr/local/bin/virtualenvwrapper.sh\" >> ~/.bashrc # Create Virtualenv (env location is ~/.virtualenvs) mkvirtualenv <env_name> # select virtualenv workon <env_name>","title":"Virtualenv Wrapper Installation"},{"location":"notes_linux/ubuntu/#pip-packages","text":"For Machine Learning 1 2 3 4 5 6 # Create Virtualenv mkvirtualenv ML # Activate it workon ML # Install packages (if behinde proxy use pip install --proxy=<proxy_address>) pip install scipy scikit-learn matplotlib jupyter pandas numpy tensorflow keras seaborn For Web Development 1 2 3 4 5 6 # Create Virtualenv mkvirtualenv web # Activate it workon web # Install packages (if behinde proxy use pip install --proxy=<proxy_address>) pip install django beautifulsoup4 requests ipython","title":"pip packages"},{"location":"notes_linux/ubuntu/#compiler-development","text":"1 sudo apt install flex bison","title":"Compiler Development"},{"location":"notes_linux/ubuntu/#networking-tools","text":"1 sudo apt install libpcap-dev libnet1-dev rpcbind openssh-server nmap","title":"Networking tools"},{"location":"notes_linux/ubuntu/#computer-vision-or-image-processing-with-opencv","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 sudo apt install python-numpy cd ~ # Clone latest codebase for opencv (do git checkout for specific version) git clone https://github.com/Itseez/opencv.git # Clone opencv contrib plugins git clone https://github.com/Itseez/opencv_contrib.git # install prerequisites sudo apt-get install cmake pkg-config libjpeg8-dev libtiff-dev libjasper-dev libpng12-dev libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libatlas-base-dev gfortran libopencv-dev build-essential checkinstall cmake pkg-config yasm libtiff5-dev libjpeg-dev libjasper-dev libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev libv4l-dev python-dev python-numpy libtbb-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils ffmpeg libgphoto2-dev # Start Build Process cd opencv mkdir build cd build cmake -D CMAKE_BUILD_TYPE = RELEASE -D CMAKE_INSTALL_PREFIX = /usr/local -D INSTALL_C_EXAMPLES = ON -D INSTALL_PYTHON_EXAMPLES = ON -D OPENCV_EXTRA_MODULES_PATH = ../../opencv_contrib/modules -D BUILD_EXAMPLES = ON -D WITH_QT = ON -D WITH_OPENGL = ON .. make -j4 sudo make install sudo ldconfig","title":"Computer Vision or Image Processing with OpenCV"},{"location":"notes_linux/ubuntu/#parallel-processing-with-openmpi","text":"1 2 3 4 5 6 7 8 9 10 11 12 #install pre-requisites sudo apt-get install libibnetdisc-dev # download codebase wget https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.2.tar.gz # extract tar -xzvf openmpi-1.10.2.tar.gz # configure and build ./configure --prefix = \"~/.openmpi\" make -j4 sudo make install echo \"export PATH= $PATH : $HOME /.openmpi/bin\" >> ~/.bashrc echo \"export LD_LIBRARY_PATH= $LD_LIBRARY_PATH : $HOME /.openmpi/lib/\" >> ~/.bashrc","title":"Parallel Processing with OpenMPI"},{"location":"notes_linux/ubuntu/#android-tools","text":"1 sudo apt install android-tools-adb android-tools-fastboot","title":"Android tools"},{"location":"notes_linux/ubuntu/#media-tools","text":"1 sudo apt install flashplugin-installer vlc ffmpeg","title":"Media tools"},{"location":"notes_linux/ubuntu/#editor","text":"install vim 1 sudo apt install vim Install Atom Editor download 1 sudo dpkg -i atom-amd64.dev Install Visual Studio Code download 1 sudo dpkg -i code_<version>.deb","title":"Editor"},{"location":"notes_linux/ubuntu/#ubuntu-customization-theme-and-icons","text":"Install Gnome Tweak Tool 1 2 3 4 sudo apt install gnome-tweak-tool # Create Theme and Icon directory mkdir ~/.icons ~/.themes Download Themes and Icons, Place it under respective directory and open tweak tool select your themes Suggested Themes and Flatabulous Paper-Theme Paper-Icon-Theme","title":"Ubuntu Customization (Theme and Icons)"},{"location":"notes_linux/ubuntu/#install-zsh","text":"1 2 3 sudo apt install zsh curl -L https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh | sh chsh -s ` which zsh `","title":"Install ZSH"},{"location":"notes_linux/ubuntu/#web-development-in-php-with-apache2-web-server","text":"1 2 3 4 5 #Install apache2 and php sudo apt install apache2 apache2-utils libapache2-mod-php sudo apt install php php-dev php-mcrypt php-mysql php-mbstring php-dom # Enable mod_rewrite for apache2 sudo a2enmod rewrite Configure index.php for priorities add index.php sudo nano /etc/apache2/mods-available/dir.conf 1 2 3 <IfModule mod_dir.c> DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm </IfModule> Configure Mod Rewrite sudo nano /etc/apache2/sites-available/000-default.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <VirtualHost *:80> ServerAdmin webmaster@localhost DocumentRoot /var/www/html <Directory /var/www/html> Options FollowSymLinks MultiViews Indexes AllowOverride All Order allow,deny allow from all </Directory> ErrorLog ${ APACHE_LOG_DIR } /error.log CustomLog ${ APACHE_LOG_DIR } /access.log combined </VirtualHost> Reload Apache sudo service apache2 restart","title":"Web Development in PHP with Apache2 Web Server"},{"location":"notes_linux/ubuntu/#java-development","text":"1 2 3 4 # install jdk sudo apt install openjdk-8-jdk # install maven sudo apt install maven Install eclipse dowload","title":"Java Development"},{"location":"notes_linux/ubuntu/#ruby-development","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # install pre requisites sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev # clone rbenv git clone https://github.com/rbenv/rbenv.git ~/.rbenv git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build git clone https://github.com/rbenv/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash # add configuration to bashrc echo \"export PATH= $PATH : $HOME /.rbenv/bin: $HOME /.rbenv/shims\" >> ~/.bashrc echo \"eval $( rbenv init - ) \" >> ~/.bashrc echo \"export PATH= $HOME /.rbenv/plugins/ruby-build/bin: $PATH \" >> ~/.bashrc # install and set specific ruby version rbenv install 2 .3.0 rbenv global 2 .3.0 # install some gems gem install bundler jekyll mysql2 rails jekyll-pagedown","title":"Ruby Development"},{"location":"notes_linux/ubuntu/#database","text":"1 2 3 4 5 6 # install nosql database sudo apt install mongodb-server # install sqlite3 for smaller db sudo apt install libsqlite3-dev sqlite3 # mysql community version installation sudo apt install mysql-server libmysqlclient-dev","title":"Database"},{"location":"notes_linux/ubuntu/#nodejs-development","text":"1 2 3 curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - sudo apt-get install -y nodejs sudo npm install -g grunt-cli yarn @angular/cli","title":"NodeJs Development"},{"location":"notes_linux/ubuntu/#aspnet-development","text":"1 2 3 4 5 6 7 sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF echo \"deb http://download.mono-project.com/repo/debian wheezy main\" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list sudo apt update # install mono libraries sudo apt install mono-devel mono-complete referenceassemblies-pcl ca-certificates-mono mono-xsp4 # install mono ide sudo apt install monodevelop-nunit monodevelop-versioncontrol monodevelop-database","title":"ASP.NET Development"},{"location":"notes_linux/ubuntu/#cloud-storage-dropbox","text":"1 2 3 cd ~ && wget -O - \"https://www.dropbox.com/download?plat=lnx.x86_64\" | tar xzf - # to start dropbox sh ~/.dropbox-dist/dropboxd","title":"CLoud Storage (Dropbox)"},{"location":"notes_python/","text":"Python useful links \u00b6 Python3 \u5b98\u65b9\u6587\u6863 Python \u722c\u866b\u76f8\u5173 \u00b6 Request \u5b98\u65b9\u6587\u6863 BeautifulSoup \u5b98\u65b9\u6587\u6863 pyquery \u5b98\u65b9\u6587\u6863 scrapy \u5b98\u65b9\u6587\u6863 lxml \u5b98\u65b9\u6587\u6863 selenium \u5b98\u65b9\u6587\u6863 selenium py \u975e\u5b98\u65b9\u6587\u6863 \u975e\u963b\u585e \u00b6 aiohttp \u5b98\u65b9\u6587\u6863 \u4e8c\u8fdb\u5236\u7f16\u7801 \u00b6 chardet \u5b98\u65b9\u6587\u6863 \u56fe\u7247\u8bc6\u522b \u00b6 pytesseract Captcha robots.txt \u00b6 robots.txt \u5b98\u65b9\u6587\u6863 Python Markdown \u00b6 Python-markdown Pymdown","title":"Python useful links"},{"location":"notes_python/#python-useful-links","text":"Python3 \u5b98\u65b9\u6587\u6863","title":"Python useful links"},{"location":"notes_python/#python","text":"Request \u5b98\u65b9\u6587\u6863 BeautifulSoup \u5b98\u65b9\u6587\u6863 pyquery \u5b98\u65b9\u6587\u6863 scrapy \u5b98\u65b9\u6587\u6863 lxml \u5b98\u65b9\u6587\u6863 selenium \u5b98\u65b9\u6587\u6863 selenium py \u975e\u5b98\u65b9\u6587\u6863","title":"Python \u722c\u866b\u76f8\u5173"},{"location":"notes_python/#_1","text":"aiohttp \u5b98\u65b9\u6587\u6863","title":"\u975e\u963b\u585e"},{"location":"notes_python/#_2","text":"chardet \u5b98\u65b9\u6587\u6863","title":"\u4e8c\u8fdb\u5236\u7f16\u7801"},{"location":"notes_python/#_3","text":"pytesseract Captcha","title":"\u56fe\u7247\u8bc6\u522b"},{"location":"notes_python/#robotstxt","text":"robots.txt \u5b98\u65b9\u6587\u6863","title":"robots.txt"},{"location":"notes_python/#python-markdown","text":"Python-markdown Pymdown","title":"Python Markdown"},{"location":"notes_python/celery/","text":"celery env setup \u00b6 Install and config Redis 1 2 3 4 5 6 7 8 9 10 11 12 13 sudo apt-get install redis cp /etc/redis/redis.conf # modify following line > bind 127 .0.0.1 ::1 > protected-mode yes ## into > # bind 127.0.0.1 ::1 > protected-mode no # start redis with custom config sudo redis-server /etc/redis/redis_all.conf & install python modules 1 2 pip install redis pip install celery simple celery example \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # task.py from celery import Celery from time import sleep REDIS_IP = x . x . x . x app = Celery ( 'tasks' , backend = REDIS_IP , broker = REDIS_IP ) @app . task def async_job ( x , y ): sleep ( 0.1 ) return x + y Install celery and redis . Start worker on each machine. 1 celery -A tasks worker -l INFO Stop worker on each machine, Ctrl + c Start worker on each machine in the background. 1 celery multi start w1 -A tasks -l INFO Restart worker on each machine in the background. 1 celery multi restart w1 -A tasks -l INFO Stop worker on each machine in the background. 1 celery multi stop w1 -A tasks -l INFO On client machine, with ipython as example 1 2 from tasks import cadd % timeit - n 1 - r 1 [ cadd . delay ( i , i ) for i in range ( 1000 )] You will found task is running on each hosts. celery Manual routing \u00b6 Assign different queque for each tasks 1 2 3 4 5 6 7 8 9 10 11 12 13 from kombu import Exchange , Queue app . conf . task_queues = { Queue ( 'feed_tasks' , routing_key = 'feed.#' ), Queue ( 'regular_tasks' , routing_key = 'task.#' ), Queue ( 'image_tasks' , exchange = Exchange ( 'mediatasks' , type = 'direct' ), routing_key = 'image.compress' ), } app . conf . task_routes = { ( 'feed.tasks.*' , { 'queue' : 'feeds' }), ( 'web.tasks.*' , { 'queue' : 'web' }), ( re . compile ( r '(video|image)\\.tasks\\..*' ), { 'queue' : 'media' }), } Note: celery 4.0 introduced new lower case settings and setting organization. for example: CELERY_QUEUES is old style config, which is replace by task_queues .","title":"Python distribute Celery"},{"location":"notes_python/celery/#celery-env-setup","text":"Install and config Redis 1 2 3 4 5 6 7 8 9 10 11 12 13 sudo apt-get install redis cp /etc/redis/redis.conf # modify following line > bind 127 .0.0.1 ::1 > protected-mode yes ## into > # bind 127.0.0.1 ::1 > protected-mode no # start redis with custom config sudo redis-server /etc/redis/redis_all.conf & install python modules 1 2 pip install redis pip install celery","title":"celery env setup"},{"location":"notes_python/celery/#simple-celery-example","text":"1 2 3 4 5 6 7 8 9 10 11 12 # task.py from celery import Celery from time import sleep REDIS_IP = x . x . x . x app = Celery ( 'tasks' , backend = REDIS_IP , broker = REDIS_IP ) @app . task def async_job ( x , y ): sleep ( 0.1 ) return x + y Install celery and redis . Start worker on each machine. 1 celery -A tasks worker -l INFO Stop worker on each machine, Ctrl + c Start worker on each machine in the background. 1 celery multi start w1 -A tasks -l INFO Restart worker on each machine in the background. 1 celery multi restart w1 -A tasks -l INFO Stop worker on each machine in the background. 1 celery multi stop w1 -A tasks -l INFO On client machine, with ipython as example 1 2 from tasks import cadd % timeit - n 1 - r 1 [ cadd . delay ( i , i ) for i in range ( 1000 )] You will found task is running on each hosts.","title":"simple celery example"},{"location":"notes_python/celery/#celery-manual-routing","text":"Assign different queque for each tasks 1 2 3 4 5 6 7 8 9 10 11 12 13 from kombu import Exchange , Queue app . conf . task_queues = { Queue ( 'feed_tasks' , routing_key = 'feed.#' ), Queue ( 'regular_tasks' , routing_key = 'task.#' ), Queue ( 'image_tasks' , exchange = Exchange ( 'mediatasks' , type = 'direct' ), routing_key = 'image.compress' ), } app . conf . task_routes = { ( 'feed.tasks.*' , { 'queue' : 'feeds' }), ( 'web.tasks.*' , { 'queue' : 'web' }), ( re . compile ( r '(video|image)\\.tasks\\..*' ), { 'queue' : 'media' }), } Note: celery 4.0 introduced new lower case settings and setting organization. for example: CELERY_QUEUES is old style config, which is replace by task_queues .","title":"celery Manual routing"},{"location":"notes_python/ipython/","text":"IPython Notes \u00b6 \u5e38\u7528line magics \u00b6 %lsmagic %pdoc %pdef %psource %pfile %timeit -n \u5355\u8bcd\u5faa\u73af\u4e2d\u6267\u884c\u7684\u6b21\u6570 -r \u6267\u884c\u5faa\u73af\u7684\u6b21\u6570 \u5e38\u7528cell magics \u00b6","title":"IPython Notes"},{"location":"notes_python/ipython/#ipython-notes","text":"","title":"IPython Notes"},{"location":"notes_python/ipython/#line-magics","text":"%lsmagic %pdoc %pdef %psource %pfile %timeit -n \u5355\u8bcd\u5faa\u73af\u4e2d\u6267\u884c\u7684\u6b21\u6570 -r \u6267\u884c\u5faa\u73af\u7684\u6b21\u6570","title":"\u5e38\u7528line magics"},{"location":"notes_python/ipython/#cell-magics","text":"","title":"\u5e38\u7528cell magics"},{"location":"notes_python/python/","text":"Python Notes \u00b6 \u51fd\u6570\u5185\u4ee3\u7801\u6267\u884c\u6548\u7387\u66f4\u9ad8 Python \u4fee\u6539\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 \u6587\u4ef6\u6253\u5f00\u6a21\u5f0f # t: Text\u6a21\u5f0f, \u9ed8\u8ba4\u6a21\u5f0f # b: \u4e8c\u8fdb\u5236\u6a21\u5f0f\uff0c \u6bd4\u5982\u56fe\u7247 \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 \uff0c \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6 # w\uff1a\u4ee5TEXT\u5199\u65b9\u5f0f\u6253\u5f00\uff0c # a\uff1a\u4ee5TEXT\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00 (\u4ece EOF \u5f00\u59cb, \u5fc5\u8981\u65f6\u521b\u5efa\u65b0\u6587\u4ef6) # r+\uff1a\u4ee5TEXT\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\uff0c\u4fdd\u7559\u6587\u4ef6\u539f\u5185\u5bb9\uff0c\u6587\u4ef6\u64cd\u4f5c\u6807\u8bb0\u6307\u5411\u6587\u4ef6\u5934 # w+\uff1a\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\uff0c\u5220\u9664\u6587\u4ef6\u539f\u5185\u5bb9\uff0c\u53ea\u80fd\u8bfb\u540e\u9762\u5199\u7684 # a+\uff1a\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\uff0c\u4fdd\u7559\u6587\u4ef6\u539f\u5185\u5bb9\uff0c\u6587\u4ef6\u64cd\u4f5c\u6807\u8bb0\u6307\u5411\u6587\u4ef6\u5c3e \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 \uff0c \u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u62a5\u9519 # x: \u6587\u4ef6\u5b58\u5728\u5c31\u62a5\u9519 fp = open ( \"test.txt\" , 'w' ) fp . read ([ size ]) # size\u4e3a\u8bfb\u53d6\u7684\u957f\u5ea6\uff0c\u4ee5byte\u4e3a\u5355\u4f4d fp . readline ([ size ]) #\u8bfb\u4e00\u884c\uff0c\u5982\u679c\u5b9a\u4e49\u4e86size\uff0c\u6709\u53ef\u80fd\u8fd4\u56de\u7684\u53ea\u662f\u4e00\u884c\u7684\u4e00\u90e8\u5206 fp . readlines ([ size ]) fp . write ( str ) # \u628astr\u5199\u5230\u6587\u4ef6\u4e2d\uff0cwrite()\u5e76\u4e0d\u4f1a\u5728str\u540e\u52a0\u4e0a\u4e00\u4e2a\u6362\u884c\u7b26 fp . writelines ( seq ) fp . flush () # \u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5199\u5165\u786c\u76d8 fp . fileno () # \u8fd4\u56de\u4e00\u4e2a\u957f\u6574\u578b\u7684\"\u6587\u4ef6\u6807\u7b7e\" fp . isatty () # \u6587\u4ef6\u662f\u5426\u662f\u4e00\u4e2a\u7ec8\u7aef\u8bbe\u5907\u6587\u4ef6(unix\u7cfb\u7edf\u4e2d\u7684) fp . tell () # \u8fd4\u56de\u6587\u4ef6\u64cd\u4f5c\u6807\u8bb0\u7684\u5f53\u524d\u4f4d\u7f6e\uff0c\u4ee5\u6587\u4ef6\u7684\u5f00\u5934\u4e3a\u539f\u70b9 fp . next () # \u8fd4\u56de\u4e0b\u4e00\u884c fp . seek ( offset [, whence ]) # \u5c06\u6587\u4ef6\u6253\u64cd\u4f5c\u6807\u8bb0\u79fb\u5230offset\u7684\u4f4d\u7f6e \u6587\u4ef6\u76ee\u5f55\u64cd\u4f5c \uff0c \u4e0b\u9762\u64cd\u4f5c\u90fd\u9700\u8981\u5f15\u5165os\u6a21\u5757 import os os . remove ( \"file.txt\" ) # \u5220\u9664\u6587\u4ef6 os . path . exists ( \"demofile.txt\" ) # \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5904\u5728 os . rmdir ( \"myfolder\" ) # \u5220\u9664\u6587\u4ef6\u5939 Python format \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570 li = [ 'hoho' , 18 ] 'my name is {} ,age {} ' . format ( * li ) 'my name is hoho ,age 18' 'my name is {1} ,age {0} {1} ' . format ( 10 , 'hoho' ) 'my name is hoho ,age 10 hoho' \u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 hash = { 'name' : 'hoho' , 'age' : 18 } 'my name is {name} ,age is {age} ' . format ( name = 'hoho' , age = 19 ) 'my name is hoho,age is 19' 'my name is {name} ,age is {age} ' . format ( ** hash ) 'my name is hoho,age is 18' \u586b\u5145\u4e0e\u683c\u5f0f\u5316 ' {0:>10} ' . format ( 5 ) # \u53f3\u5bf9\u9f50 ' 5' ' {0:<10} ' . format ( 5 ) # \u5de6\u5bf9\u9f50 '5 ' ' {0:^10} ' . format ( 5 ) # \u5c45\u4e2d\u5bf9\u9f50 ' 5 ' ' {0:*^10} ' . format ( 5 ) # \u5c45\u4e2d\u5bf9\u9f50\uff0c\u586b\u5145* '****5****' \u6b63\u8d1f\u6570\u663e\u793a ' {:-} and {:-} ' . format ( - 3 , 7 ) # \u6b63\u6570\u4e0d\u663e\u793a\u52a0\u53f7 '-3 and 7' ' {:-} and {:-} ' . format ( - 3 , 7 ) # \u6b63\u6570\u663e\u793a\u52a0\u53f7 '-3 and +7' ' {: } and {: } ' . format ( - 3 , 7 ) # \u6b63\u6570\u524d\u9762\u52a0\u7a7a\u683c '-3 and 7' \u7cbe\u5ea6\u4e0e\u8fdb\u5236 ' {0:.2f} ' . format ( 1 / 3 ) # \u6d6e\u70b9\u6570 \u7cbe\u5ea6\u683c\u5f0f\u5316, \u4e24\u4f4d\u7cbe\u5ea6 '0.33' x = float ( 'inf' ) # \u5927\u5199\u6d6e\u70b9\u6570\u683c\u5f0f\u5316inf \u548c nan \u663e\u793a\u6210 INF \u548c NAN ' {:F} ' . format ( x ) INF ' {0:b} ' . format ( 10 ) # \u6574\u6570 \u4e8c\u8fdb\u5236\u683c\u5f0f\u5316 1010 ' {0:o} ' . format ( 10 ) # \u6574\u6570 \u516b\u8fdb\u5236\u683c\u5f0f\u5316 12 ' {0:x} ' . format ( 10 ) # \u6574\u6570 16\u8fdb\u5236\u683c\u5f0f\u5316, \u5c0f\u5199\u5b57\u6bcd a ' {0:X} ' . format ( 10 ) # \u6574\u6570 16\u8fdb\u5236\u683c\u5f0f\u5316, \u5927\u5199\u5b57\u6bcd A ' {0:e} ' . format ( 500 ) # \u79d1\u5b66\u8bb0\u6570 \u5c0f\u5199e 5.000000e+02 ' {0:E} ' . format ( 500 ) # \u79d1\u5b66\u8bb0\u6570 \u5927\u5199e 5.000000E+02 ' {:,} ' . format ( 13800000000 ) # \u5343\u5206\u4f4d\u683c\u5f0f\u5316\uff0c\u9017\u53f7 13 , 800 , 000 , 000 '{:_}' . format ( 13800000000 ) # \u5343\u5206\u4f4d\u683c\u5f0f\u5316\uff0c\u4e0b\u5212\u7ebf 13_800_000_000 ' {:%} ' . format ( 0.25 ) # \u767e\u5206\u6bd4\u683c\u5f0f\u5316 25.000000 % ' {:.0%} ' . format ( 0.25 ) # \u767e\u5206\u6bd4\u683c\u5f0f\u5316\uff0c\u7cbe\u5ea6\u63a7\u5236 25 % Python \u65e5\u671f\u548c\u65f6\u95f4 \u00b6 1 2 3 4 from datetime import datetime datetime . now () . strftime ( '%Y-%m- %d %H:%M:%S' ) # \u8f93\u51fa\u5e38\u7528\u65f6\u95f4\u683c\u5f0f from time import time time () # \u65f6\u95f4\u6233 Python magic method \u00b6 __eq__ Py3: used on all compare situayion Py2: used only on equal sinatial Python buildin Modules \u00b6 os \u00b6 1 2 3 4 5 6 7 In [ 1 ]: import os In [ 2 ]: os . system ( \"date\" ) # \u4e0d\u4ec5\u6267\u884c\u547d\u4ee4\u800c\u4e14\u8fd4\u56de\u6267\u884c\u540e\u7684\u4fe1\u606f\u5bf9\u8c61(\u5e38\u7528\u4e8e\u9700\u8981\u83b7\u53d6\u6267\u884c\u547d\u4ee4\u540e\u7684\u8fd4\u56de\u4fe1\u606f) Tue Jan 5 16 : 58 : 02 CST 2021 In [ 3 ]: nowtime = os . popen ( 'date' ) # \u6253\u5f00\u4e00\u4e2a\u7ba1\u9053\u8fd0\u884c\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u7c7b\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4ece\u4e2d\u8bfb\u53d6\u8fd4\u56de\u503c In [ 7 ]: nowtime . read () Out [ 7 ]: 'Tue Jan 5 16:58:57 CST 2021 \\n ' subprocess \u00b6 \u751f\u6210\u65b0\u7684\u8fdb\u7a0b\uff0c\u8fde\u63a5\u5b83\u4eec\u7684\u8f93\u5165\u3001\u8f93\u51fa\u3001\u9519\u8bef\u7ba1\u9053\uff0c\u5e76\u4e14\u83b7\u53d6\u5b83\u4eec\u7684\u8fd4\u56de\u7801\u3002 \u63a8\u8350\u7528 subprocess.Popen \u4ee3\u66ff os.popen run Python3.5\u6dfb\u52a0\u7684\u51fd\u6570, \u53ef\u4ee5\u53c2\u6570\u5982\u4e0b: 1 run ( args , * , stdin = None , input = None , stdout = None , stderr = None , shell = False , timeout = None , check = False , encoding = None , errors = None ) \u5bf9\u4e8e\u9ad8\u7ea7\u5b50\u8fdb\u7a0b\u7528\u6cd5, \u53ef\u4ee5\u7528 Popen \u7c7b, \u53ef\u7528\u53c2\u6570\u5982\u4e0b: 1 Popen ( args , bufsize = 0 , executable = None , stdin = None , stdout = None , stderr = None , preexec_fn = None , close_fds = False , shell = False , cwd = None , env = None , universal_newlines = False , startupinfo = None , creationflags = 0 ) \u5982\u679c shell \u8bbe\u4e3a True,\uff0c\u5219\u4f7f\u7528 shell \u6267\u884c\u6307\u5b9a\u7684\u6307\u4ee4 \u65b9\u6cd5 \u8bf4\u660e Popen.poll \u68c0\u67e5\u5b50\u8fdb\u7a0b\u662f\u5426\u5df2\u88ab\u7ec8\u6b62 Popen.wait \u7b49\u5f85\u5b50\u8fdb\u7a0b\u88ab\u7ec8\u6b62 Popen.communicate \u4e0e\u8fdb\u7a0b\u4ea4\u4e92 Popen.send_signal \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u5b50\u8fdb\u7a0b Popen.terminate \u505c\u6b62\u5b50\u8fdb\u7a0b Popen.kill \u6740\u6b7b\u5b50\u8fdb\u7a0b Popen\u4e0e\u8fdb\u7a0b\u4ea4\u4e92\u4f8b\u5b50 1 2 3 4 5 6 import subprocess p1 = subprocess . Popen ( 'dir' , shell = True , stdin = None , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) p2 = subprocess . Popen ( 'sort /R' , shell = True , stdin = p1 . stdout ) print ( p1 . stdout . read ()) p1 . stdout . close () out , err = p2 . communicate () Hashlib \u00b6 1 hashlib . md5 ( 'abc' . encode ( 'utf-8' ) . hexdigest () Traceback \u00b6 1 2 3 4 5 6 7 8 9 def test_traceback (): import traceback # \u8fd4\u56de\u8c03\u7528\u5806\u6808\uff08\u4e00\u4e2alist\uff09\uff0c\u6700\u591a\u4e24\u5c42\uff0c \u5176\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\u5f53\u524d\u884c\u7684\u4fe1\u606f\uff0c\u5305\u62ec\uff08\u6587\u4ef6\u540d\uff0c\u884c\u53f7\uff0c\u51fd\u6570\u540d\uff0c\u8fd9\u4e00\u884c\u7684\u4ee3\u7801\uff09 info = traceback . extract_stack ( limit = 2 ) print ( info ) # \u6253\u5370\u51fd\u6570\u8c03\u7528\u5806\u6808 traceback . print_stack ( limit = 2 ) # \u65e0\u5f02\u5e38\u65f6\u4e3aNone traceback . print_exc () Json beautify \u00b6 load \u8bfb\u53d6 file \u8f6c\u5316, useful parameter: object_hook , object_paris_hook loads \u8bfb\u53d6 str \u8f6c\u5316 dump \u8f6c\u5316py \u5bf9\u8c61\u6210 file, useful parameter: indent dumps \u8f6c\u6362py \u5bf9\u8c61\u6210json str 1 2 3 4 5 6 7 s_json = \"\"\"[{\"name\": \"John\",\"address\": {\"street\": \"8 bit avenue\", \"zip\": \"94444\", \"city\": \"San Jose\"}}, {\"name\": \"Chris\",\"address\": {\"street\": \"4 bit avenue\", \"zip\": \"95555\", \"city\": \"Milpitas\"}}]\"\"\" o_json = json . loads ( s_json ) f_json = json . dumps ( o_json , indent = 3 , sort_keys = False )","title":"Python Notes"},{"location":"notes_python/python/#python-notes","text":"\u51fd\u6570\u5185\u4ee3\u7801\u6267\u884c\u6548\u7387\u66f4\u9ad8","title":"Python Notes"},{"location":"notes_python/python/#python","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 \u6587\u4ef6\u6253\u5f00\u6a21\u5f0f # t: Text\u6a21\u5f0f, \u9ed8\u8ba4\u6a21\u5f0f # b: \u4e8c\u8fdb\u5236\u6a21\u5f0f\uff0c \u6bd4\u5982\u56fe\u7247 \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6 \uff0c \u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6 # w\uff1a\u4ee5TEXT\u5199\u65b9\u5f0f\u6253\u5f00\uff0c # a\uff1a\u4ee5TEXT\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00 (\u4ece EOF \u5f00\u59cb, \u5fc5\u8981\u65f6\u521b\u5efa\u65b0\u6587\u4ef6) # r+\uff1a\u4ee5TEXT\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\uff0c\u4fdd\u7559\u6587\u4ef6\u539f\u5185\u5bb9\uff0c\u6587\u4ef6\u64cd\u4f5c\u6807\u8bb0\u6307\u5411\u6587\u4ef6\u5934 # w+\uff1a\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\uff0c\u5220\u9664\u6587\u4ef6\u539f\u5185\u5bb9\uff0c\u53ea\u80fd\u8bfb\u540e\u9762\u5199\u7684 # a+\uff1a\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\uff0c\u4fdd\u7559\u6587\u4ef6\u539f\u5185\u5bb9\uff0c\u6587\u4ef6\u64cd\u4f5c\u6807\u8bb0\u6307\u5411\u6587\u4ef6\u5c3e \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 \uff0c \u5982\u679c\u6587\u4ef6\u5b58\u5728\u5219\u62a5\u9519 # x: \u6587\u4ef6\u5b58\u5728\u5c31\u62a5\u9519 fp = open ( \"test.txt\" , 'w' ) fp . read ([ size ]) # size\u4e3a\u8bfb\u53d6\u7684\u957f\u5ea6\uff0c\u4ee5byte\u4e3a\u5355\u4f4d fp . readline ([ size ]) #\u8bfb\u4e00\u884c\uff0c\u5982\u679c\u5b9a\u4e49\u4e86size\uff0c\u6709\u53ef\u80fd\u8fd4\u56de\u7684\u53ea\u662f\u4e00\u884c\u7684\u4e00\u90e8\u5206 fp . readlines ([ size ]) fp . write ( str ) # \u628astr\u5199\u5230\u6587\u4ef6\u4e2d\uff0cwrite()\u5e76\u4e0d\u4f1a\u5728str\u540e\u52a0\u4e0a\u4e00\u4e2a\u6362\u884c\u7b26 fp . writelines ( seq ) fp . flush () # \u628a\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u5199\u5165\u786c\u76d8 fp . fileno () # \u8fd4\u56de\u4e00\u4e2a\u957f\u6574\u578b\u7684\"\u6587\u4ef6\u6807\u7b7e\" fp . isatty () # \u6587\u4ef6\u662f\u5426\u662f\u4e00\u4e2a\u7ec8\u7aef\u8bbe\u5907\u6587\u4ef6(unix\u7cfb\u7edf\u4e2d\u7684) fp . tell () # \u8fd4\u56de\u6587\u4ef6\u64cd\u4f5c\u6807\u8bb0\u7684\u5f53\u524d\u4f4d\u7f6e\uff0c\u4ee5\u6587\u4ef6\u7684\u5f00\u5934\u4e3a\u539f\u70b9 fp . next () # \u8fd4\u56de\u4e0b\u4e00\u884c fp . seek ( offset [, whence ]) # \u5c06\u6587\u4ef6\u6253\u64cd\u4f5c\u6807\u8bb0\u79fb\u5230offset\u7684\u4f4d\u7f6e \u6587\u4ef6\u76ee\u5f55\u64cd\u4f5c \uff0c \u4e0b\u9762\u64cd\u4f5c\u90fd\u9700\u8981\u5f15\u5165os\u6a21\u5757 import os os . remove ( \"file.txt\" ) # \u5220\u9664\u6587\u4ef6 os . path . exists ( \"demofile.txt\" ) # \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5904\u5728 os . rmdir ( \"myfolder\" ) # \u5220\u9664\u6587\u4ef6\u5939","title":"Python \u4fee\u6539\u6587\u4ef6"},{"location":"notes_python/python/#python-format","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570 li = [ 'hoho' , 18 ] 'my name is {} ,age {} ' . format ( * li ) 'my name is hoho ,age 18' 'my name is {1} ,age {0} {1} ' . format ( 10 , 'hoho' ) 'my name is hoho ,age 10 hoho' \u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570 hash = { 'name' : 'hoho' , 'age' : 18 } 'my name is {name} ,age is {age} ' . format ( name = 'hoho' , age = 19 ) 'my name is hoho,age is 19' 'my name is {name} ,age is {age} ' . format ( ** hash ) 'my name is hoho,age is 18' \u586b\u5145\u4e0e\u683c\u5f0f\u5316 ' {0:>10} ' . format ( 5 ) # \u53f3\u5bf9\u9f50 ' 5' ' {0:<10} ' . format ( 5 ) # \u5de6\u5bf9\u9f50 '5 ' ' {0:^10} ' . format ( 5 ) # \u5c45\u4e2d\u5bf9\u9f50 ' 5 ' ' {0:*^10} ' . format ( 5 ) # \u5c45\u4e2d\u5bf9\u9f50\uff0c\u586b\u5145* '****5****' \u6b63\u8d1f\u6570\u663e\u793a ' {:-} and {:-} ' . format ( - 3 , 7 ) # \u6b63\u6570\u4e0d\u663e\u793a\u52a0\u53f7 '-3 and 7' ' {:-} and {:-} ' . format ( - 3 , 7 ) # \u6b63\u6570\u663e\u793a\u52a0\u53f7 '-3 and +7' ' {: } and {: } ' . format ( - 3 , 7 ) # \u6b63\u6570\u524d\u9762\u52a0\u7a7a\u683c '-3 and 7' \u7cbe\u5ea6\u4e0e\u8fdb\u5236 ' {0:.2f} ' . format ( 1 / 3 ) # \u6d6e\u70b9\u6570 \u7cbe\u5ea6\u683c\u5f0f\u5316, \u4e24\u4f4d\u7cbe\u5ea6 '0.33' x = float ( 'inf' ) # \u5927\u5199\u6d6e\u70b9\u6570\u683c\u5f0f\u5316inf \u548c nan \u663e\u793a\u6210 INF \u548c NAN ' {:F} ' . format ( x ) INF ' {0:b} ' . format ( 10 ) # \u6574\u6570 \u4e8c\u8fdb\u5236\u683c\u5f0f\u5316 1010 ' {0:o} ' . format ( 10 ) # \u6574\u6570 \u516b\u8fdb\u5236\u683c\u5f0f\u5316 12 ' {0:x} ' . format ( 10 ) # \u6574\u6570 16\u8fdb\u5236\u683c\u5f0f\u5316, \u5c0f\u5199\u5b57\u6bcd a ' {0:X} ' . format ( 10 ) # \u6574\u6570 16\u8fdb\u5236\u683c\u5f0f\u5316, \u5927\u5199\u5b57\u6bcd A ' {0:e} ' . format ( 500 ) # \u79d1\u5b66\u8bb0\u6570 \u5c0f\u5199e 5.000000e+02 ' {0:E} ' . format ( 500 ) # \u79d1\u5b66\u8bb0\u6570 \u5927\u5199e 5.000000E+02 ' {:,} ' . format ( 13800000000 ) # \u5343\u5206\u4f4d\u683c\u5f0f\u5316\uff0c\u9017\u53f7 13 , 800 , 000 , 000 '{:_}' . format ( 13800000000 ) # \u5343\u5206\u4f4d\u683c\u5f0f\u5316\uff0c\u4e0b\u5212\u7ebf 13_800_000_000 ' {:%} ' . format ( 0.25 ) # \u767e\u5206\u6bd4\u683c\u5f0f\u5316 25.000000 % ' {:.0%} ' . format ( 0.25 ) # \u767e\u5206\u6bd4\u683c\u5f0f\u5316\uff0c\u7cbe\u5ea6\u63a7\u5236 25 %","title":"Python format \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"notes_python/python/#python_1","text":"1 2 3 4 from datetime import datetime datetime . now () . strftime ( '%Y-%m- %d %H:%M:%S' ) # \u8f93\u51fa\u5e38\u7528\u65f6\u95f4\u683c\u5f0f from time import time time () # \u65f6\u95f4\u6233","title":"Python \u65e5\u671f\u548c\u65f6\u95f4"},{"location":"notes_python/python/#python-magic-method","text":"__eq__ Py3: used on all compare situayion Py2: used only on equal sinatial","title":"Python magic method"},{"location":"notes_python/python/#python-buildin-modules","text":"","title":"Python buildin Modules"},{"location":"notes_python/python/#os","text":"1 2 3 4 5 6 7 In [ 1 ]: import os In [ 2 ]: os . system ( \"date\" ) # \u4e0d\u4ec5\u6267\u884c\u547d\u4ee4\u800c\u4e14\u8fd4\u56de\u6267\u884c\u540e\u7684\u4fe1\u606f\u5bf9\u8c61(\u5e38\u7528\u4e8e\u9700\u8981\u83b7\u53d6\u6267\u884c\u547d\u4ee4\u540e\u7684\u8fd4\u56de\u4fe1\u606f) Tue Jan 5 16 : 58 : 02 CST 2021 In [ 3 ]: nowtime = os . popen ( 'date' ) # \u6253\u5f00\u4e00\u4e2a\u7ba1\u9053\u8fd0\u884c\u6587\u4ef6\uff0c\u8fd4\u56de\u4e00\u4e2a\u7c7b\u6587\u4ef6\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4ece\u4e2d\u8bfb\u53d6\u8fd4\u56de\u503c In [ 7 ]: nowtime . read () Out [ 7 ]: 'Tue Jan 5 16:58:57 CST 2021 \\n '","title":"os"},{"location":"notes_python/python/#subprocess","text":"\u751f\u6210\u65b0\u7684\u8fdb\u7a0b\uff0c\u8fde\u63a5\u5b83\u4eec\u7684\u8f93\u5165\u3001\u8f93\u51fa\u3001\u9519\u8bef\u7ba1\u9053\uff0c\u5e76\u4e14\u83b7\u53d6\u5b83\u4eec\u7684\u8fd4\u56de\u7801\u3002 \u63a8\u8350\u7528 subprocess.Popen \u4ee3\u66ff os.popen run Python3.5\u6dfb\u52a0\u7684\u51fd\u6570, \u53ef\u4ee5\u53c2\u6570\u5982\u4e0b: 1 run ( args , * , stdin = None , input = None , stdout = None , stderr = None , shell = False , timeout = None , check = False , encoding = None , errors = None ) \u5bf9\u4e8e\u9ad8\u7ea7\u5b50\u8fdb\u7a0b\u7528\u6cd5, \u53ef\u4ee5\u7528 Popen \u7c7b, \u53ef\u7528\u53c2\u6570\u5982\u4e0b: 1 Popen ( args , bufsize = 0 , executable = None , stdin = None , stdout = None , stderr = None , preexec_fn = None , close_fds = False , shell = False , cwd = None , env = None , universal_newlines = False , startupinfo = None , creationflags = 0 ) \u5982\u679c shell \u8bbe\u4e3a True,\uff0c\u5219\u4f7f\u7528 shell \u6267\u884c\u6307\u5b9a\u7684\u6307\u4ee4 \u65b9\u6cd5 \u8bf4\u660e Popen.poll \u68c0\u67e5\u5b50\u8fdb\u7a0b\u662f\u5426\u5df2\u88ab\u7ec8\u6b62 Popen.wait \u7b49\u5f85\u5b50\u8fdb\u7a0b\u88ab\u7ec8\u6b62 Popen.communicate \u4e0e\u8fdb\u7a0b\u4ea4\u4e92 Popen.send_signal \u5c06\u4fe1\u53f7\u53d1\u9001\u7ed9\u5b50\u8fdb\u7a0b Popen.terminate \u505c\u6b62\u5b50\u8fdb\u7a0b Popen.kill \u6740\u6b7b\u5b50\u8fdb\u7a0b Popen\u4e0e\u8fdb\u7a0b\u4ea4\u4e92\u4f8b\u5b50 1 2 3 4 5 6 import subprocess p1 = subprocess . Popen ( 'dir' , shell = True , stdin = None , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) p2 = subprocess . Popen ( 'sort /R' , shell = True , stdin = p1 . stdout ) print ( p1 . stdout . read ()) p1 . stdout . close () out , err = p2 . communicate ()","title":"subprocess"},{"location":"notes_python/python/#hashlib","text":"1 hashlib . md5 ( 'abc' . encode ( 'utf-8' ) . hexdigest ()","title":"Hashlib"},{"location":"notes_python/python/#traceback","text":"1 2 3 4 5 6 7 8 9 def test_traceback (): import traceback # \u8fd4\u56de\u8c03\u7528\u5806\u6808\uff08\u4e00\u4e2alist\uff09\uff0c\u6700\u591a\u4e24\u5c42\uff0c \u5176\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\u5f53\u524d\u884c\u7684\u4fe1\u606f\uff0c\u5305\u62ec\uff08\u6587\u4ef6\u540d\uff0c\u884c\u53f7\uff0c\u51fd\u6570\u540d\uff0c\u8fd9\u4e00\u884c\u7684\u4ee3\u7801\uff09 info = traceback . extract_stack ( limit = 2 ) print ( info ) # \u6253\u5370\u51fd\u6570\u8c03\u7528\u5806\u6808 traceback . print_stack ( limit = 2 ) # \u65e0\u5f02\u5e38\u65f6\u4e3aNone traceback . print_exc ()","title":"Traceback"},{"location":"notes_python/python/#json-beautify","text":"load \u8bfb\u53d6 file \u8f6c\u5316, useful parameter: object_hook , object_paris_hook loads \u8bfb\u53d6 str \u8f6c\u5316 dump \u8f6c\u5316py \u5bf9\u8c61\u6210 file, useful parameter: indent dumps \u8f6c\u6362py \u5bf9\u8c61\u6210json str 1 2 3 4 5 6 7 s_json = \"\"\"[{\"name\": \"John\",\"address\": {\"street\": \"8 bit avenue\", \"zip\": \"94444\", \"city\": \"San Jose\"}}, {\"name\": \"Chris\",\"address\": {\"street\": \"4 bit avenue\", \"zip\": \"95555\", \"city\": \"Milpitas\"}}]\"\"\" o_json = json . loads ( s_json ) f_json = json . dumps ( o_json , indent = 3 , sort_keys = False )","title":"Json beautify"},{"location":"notes_python/vscode_python/","text":"install useful libs 1 2 3 4 pip install black pip install flake8 pip install pytest pip install pylint Linting \u00b6 Pylint \u00b6 Powerful one, mostly a good choice. Prospector \u00b6 I have a project which has no depence of Django, But Prospector keep reporting Django is not available on the PYTHONPATH for each py file, which I didn\u2019t install on venv lib. [Pylance] \u00b6 For moudle developer: Steps To fix worng Hint could not be resolved Pylance(reportMissingImports) Shift+Ctrl+P, types setting , find Perference: Open Settings (JSON) add following into settings.json 1 2 3 4 \"python.analysis.extraPaths\" : [ \"./src\" , \u3000\u3000 \"./modules\" ] flake8 \u00b6 add following into settings.json 1 2 3 \"python.linting.flake8Args\" : [ \"--ignore=E203,W503\" ], Fromatting \u00b6 black \u00b6 add black as default formator for vscode 1 2 3 4 5 \"python.formatting.provider\" : \"black\" , \"python.formatting.blackArgs\" : [ \"-l\" , \"80\" ], Testing \u00b6 Links \u00b6 black: https://black.readthedocs.io/ Bandit: https://github.com/openstack/bandit Codacy: https://www.codacy.com/ Dodgy: https://github.com/landscapeio/dodgy Draw.io: https://www.draw.io/ Flake8: https://github.com/PyCQA/flake8 Frosted: https://github.com/timothycrosley/frosted Landscape.io: https://landscape.io/ McCabe: https://github.com/PyCQA/mccabe Prospector: https://github.com/landscapeio/prospector Pydocstyle: https://github.com/PyCQA/pydocstyle Pylama: https://github.com/klen/pylama Pylint: https://github.com/PyCQA/pylint Pyroma: https://github.com/regebro/pyroma Pyt: https://github.com/python-security/pyt PyTest: https://docs.pytest.org/ PyUp.io: https://pyup.io/ Radon: https://github.com/rubik/radon Safety: https://github.com/pyupio/safety Tox: https://github.com/tox-dev/tox Vulture: https://github.com/jendrikseipp/vulture","title":"Python vscode tips"},{"location":"notes_python/vscode_python/#linting","text":"","title":"Linting"},{"location":"notes_python/vscode_python/#pylint","text":"Powerful one, mostly a good choice.","title":"Pylint"},{"location":"notes_python/vscode_python/#prospector","text":"I have a project which has no depence of Django, But Prospector keep reporting Django is not available on the PYTHONPATH for each py file, which I didn\u2019t install on venv lib.","title":"Prospector"},{"location":"notes_python/vscode_python/#pylance","text":"For moudle developer: Steps To fix worng Hint could not be resolved Pylance(reportMissingImports) Shift+Ctrl+P, types setting , find Perference: Open Settings (JSON) add following into settings.json 1 2 3 4 \"python.analysis.extraPaths\" : [ \"./src\" , \u3000\u3000 \"./modules\" ]","title":"[Pylance]"},{"location":"notes_python/vscode_python/#flake8","text":"add following into settings.json 1 2 3 \"python.linting.flake8Args\" : [ \"--ignore=E203,W503\" ],","title":"flake8"},{"location":"notes_python/vscode_python/#fromatting","text":"","title":"Fromatting"},{"location":"notes_python/vscode_python/#black","text":"add black as default formator for vscode 1 2 3 4 5 \"python.formatting.provider\" : \"black\" , \"python.formatting.blackArgs\" : [ \"-l\" , \"80\" ],","title":"black"},{"location":"notes_python/vscode_python/#testing","text":"","title":"Testing"},{"location":"notes_python/vscode_python/#links","text":"black: https://black.readthedocs.io/ Bandit: https://github.com/openstack/bandit Codacy: https://www.codacy.com/ Dodgy: https://github.com/landscapeio/dodgy Draw.io: https://www.draw.io/ Flake8: https://github.com/PyCQA/flake8 Frosted: https://github.com/timothycrosley/frosted Landscape.io: https://landscape.io/ McCabe: https://github.com/PyCQA/mccabe Prospector: https://github.com/landscapeio/prospector Pydocstyle: https://github.com/PyCQA/pydocstyle Pylama: https://github.com/klen/pylama Pylint: https://github.com/PyCQA/pylint Pyroma: https://github.com/regebro/pyroma Pyt: https://github.com/python-security/pyt PyTest: https://docs.pytest.org/ PyUp.io: https://pyup.io/ Radon: https://github.com/rubik/radon Safety: https://github.com/pyupio/safety Tox: https://github.com/tox-dev/tox Vulture: https://github.com/jendrikseipp/vulture","title":"Links"},{"location":"notes_python/common_modules/logging/","text":"logging \u00b6 logging lib \u5305\u542b 4 \u4e2a\u4e3b\u8981\u5bf9\u8c61 logger:logger \u662f\u7a0b\u5e8f\u4fe1\u606f\u8f93\u51fa\u7684\u63a5\u53e3\u3002\u5b83\u5206\u6563\u5728\u4e0d\u540c\u7684\u4ee3\u7801\u4e2d\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u8bb0\u5f55\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u5e76\u6839\u636e\u8bbe\u7f6e\u7684\u65e5\u5fd7\u7ea7\u522b\u6216 filter \u6765\u51b3\u5b9a\u54ea\u4e9b\u4fe1\u606f\u9700\u8981\u8f93\u51fa\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5206\u53d1\u5230\u5176\u5173\u8054\u7684 handler\u3002\u5e38\u7528\u7684\u65b9\u6cd5\u6709 Logger.setLevel()\uff0cLogger.addHandler() \uff0cLogger.removeHandler() \uff0cLogger.addFilter() \uff0cLogger.debug(), Logger.info(), Logger.warning(), Logger.error()\uff0cgetLogger() \u7b49\u3002logger \u652f\u6301\u5c42\u6b21\u7ee7\u627f\u5173\u7cfb\uff0c\u5b50 logger \u7684\u540d\u79f0\u901a\u5e38\u662f\u7236 logger.name \u7684\u65b9\u5f0f\u3002\u5982\u679c\u4e0d\u521b\u5efa logger \u7684\u5b9e\u4f8b\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684 root logger\uff0c\u901a\u8fc7 logging.getLogger() \u6216\u8005 logging.getLogger(\u201c\u201d) \u5f97\u5230 root logger \u5b9e\u4f8b\u3002 Handler:Handler \u7528\u6765\u5904\u7406\u4fe1\u606f\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u5c06\u4fe1\u606f\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u6587\u4ef6\u6216\u8005\u7f51\u7edc\u3002\u53ef\u4ee5\u901a\u8fc7 Logger.addHandler() \u6765\u7ed9 logger \u5bf9\u8c61\u6dfb\u52a0 handler\uff0c\u5e38\u7528\u7684 handler \u6709 StreamHandler \u548c FileHandler \u7c7b\u3002StreamHandler \u53d1\u9001\u9519\u8bef\u4fe1\u606f\u5230\u6d41\uff0c\u800c FileHandler \u7c7b\u7528\u4e8e\u5411\u6587\u4ef6\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\uff0c\u8fd9\u4e24\u4e2a handler \u5b9a\u4e49\u5728 logging \u7684\u6838\u5fc3\u6a21\u5757\u4e2d\u3002\u5176\u4ed6\u7684 hander \u5b9a\u4e49\u5728 logging.handles \u6a21\u5757\u4e2d\uff0c\u5982 HTTPHandler,SocketHandler\u3002 Formatter:Formatter \u5219\u51b3\u5b9a\u4e86 log \u4fe1\u606f\u7684\u683c\u5f0f , \u683c\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e %(< dictionary key >)s \u7684\u5f62\u5f0f\u6765\u5b9a\u4e49\uff0c\u5982\u2019%(asctime)s - %(levelname)s - %(message)s\u2019\uff0c\u652f\u6301\u7684 key \u53ef\u4ee5\u5728 python \u81ea\u5e26\u7684\u6587\u6863 LogRecord attributes \u4e2d\u67e5\u770b\u3002 Filter:Filter \u7528\u6765\u51b3\u5b9a\u54ea\u4e9b\u4fe1\u606f\u9700\u8981\u8f93\u51fa\u3002\u53ef\u4ee5\u88ab handler \u548c logger \u4f7f\u7528\uff0c\u652f\u6301\u5c42\u6b21\u5173\u7cfb\uff0c\u6bd4\u5982\u5982\u679c\u8bbe\u7f6e\u4e86 filter \u4e3a\u540d\u79f0\u4e3a A.B \u7684 logger\uff0c\u5219\u8be5 logger \u548c\u5176\u5b50 logger \u7684\u4fe1\u606f\u4f1a\u88ab\u8f93\u51fa\uff0c\u5982 A.B,A.B.C. 1 2 3 4 5 6 7 8 9 10 11 import logging logging_format = \"[ %(asctime)s ] %(process)d - %(levelname)s \" logging_format += \" %(module)s :: %(funcName)s ():1 %(lineno)d : %(message)s \" logging_formater = logging . Formatter ( logging_format ) filehandler = logging . FileHandler ( 'test.log' , 'a' ) filter = logging . Filter ( 'b' ) filehandler . addFilter ( filter ) logger = logging . getLogger ( \"Operate\" ) logger . addHandler ( filehandler ) logger . setLevel ( logging . DEBUG ) logger . debug ( 'it is a debug info' )","title":"logging"},{"location":"notes_python/common_modules/logging/#logging","text":"logging lib \u5305\u542b 4 \u4e2a\u4e3b\u8981\u5bf9\u8c61 logger:logger \u662f\u7a0b\u5e8f\u4fe1\u606f\u8f93\u51fa\u7684\u63a5\u53e3\u3002\u5b83\u5206\u6563\u5728\u4e0d\u540c\u7684\u4ee3\u7801\u4e2d\u4f7f\u5f97\u7a0b\u5e8f\u53ef\u4ee5\u5728\u8fd0\u884c\u7684\u65f6\u5019\u8bb0\u5f55\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u5e76\u6839\u636e\u8bbe\u7f6e\u7684\u65e5\u5fd7\u7ea7\u522b\u6216 filter \u6765\u51b3\u5b9a\u54ea\u4e9b\u4fe1\u606f\u9700\u8981\u8f93\u51fa\u5e76\u5c06\u8fd9\u4e9b\u4fe1\u606f\u5206\u53d1\u5230\u5176\u5173\u8054\u7684 handler\u3002\u5e38\u7528\u7684\u65b9\u6cd5\u6709 Logger.setLevel()\uff0cLogger.addHandler() \uff0cLogger.removeHandler() \uff0cLogger.addFilter() \uff0cLogger.debug(), Logger.info(), Logger.warning(), Logger.error()\uff0cgetLogger() \u7b49\u3002logger \u652f\u6301\u5c42\u6b21\u7ee7\u627f\u5173\u7cfb\uff0c\u5b50 logger \u7684\u540d\u79f0\u901a\u5e38\u662f\u7236 logger.name \u7684\u65b9\u5f0f\u3002\u5982\u679c\u4e0d\u521b\u5efa logger \u7684\u5b9e\u4f8b\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684 root logger\uff0c\u901a\u8fc7 logging.getLogger() \u6216\u8005 logging.getLogger(\u201c\u201d) \u5f97\u5230 root logger \u5b9e\u4f8b\u3002 Handler:Handler \u7528\u6765\u5904\u7406\u4fe1\u606f\u7684\u8f93\u51fa\uff0c\u53ef\u4ee5\u5c06\u4fe1\u606f\u8f93\u51fa\u5230\u63a7\u5236\u53f0\uff0c\u6587\u4ef6\u6216\u8005\u7f51\u7edc\u3002\u53ef\u4ee5\u901a\u8fc7 Logger.addHandler() \u6765\u7ed9 logger \u5bf9\u8c61\u6dfb\u52a0 handler\uff0c\u5e38\u7528\u7684 handler \u6709 StreamHandler \u548c FileHandler \u7c7b\u3002StreamHandler \u53d1\u9001\u9519\u8bef\u4fe1\u606f\u5230\u6d41\uff0c\u800c FileHandler \u7c7b\u7528\u4e8e\u5411\u6587\u4ef6\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\uff0c\u8fd9\u4e24\u4e2a handler \u5b9a\u4e49\u5728 logging \u7684\u6838\u5fc3\u6a21\u5757\u4e2d\u3002\u5176\u4ed6\u7684 hander \u5b9a\u4e49\u5728 logging.handles \u6a21\u5757\u4e2d\uff0c\u5982 HTTPHandler,SocketHandler\u3002 Formatter:Formatter \u5219\u51b3\u5b9a\u4e86 log \u4fe1\u606f\u7684\u683c\u5f0f , \u683c\u5f0f\u4f7f\u7528\u7c7b\u4f3c\u4e8e %(< dictionary key >)s \u7684\u5f62\u5f0f\u6765\u5b9a\u4e49\uff0c\u5982\u2019%(asctime)s - %(levelname)s - %(message)s\u2019\uff0c\u652f\u6301\u7684 key \u53ef\u4ee5\u5728 python \u81ea\u5e26\u7684\u6587\u6863 LogRecord attributes \u4e2d\u67e5\u770b\u3002 Filter:Filter \u7528\u6765\u51b3\u5b9a\u54ea\u4e9b\u4fe1\u606f\u9700\u8981\u8f93\u51fa\u3002\u53ef\u4ee5\u88ab handler \u548c logger \u4f7f\u7528\uff0c\u652f\u6301\u5c42\u6b21\u5173\u7cfb\uff0c\u6bd4\u5982\u5982\u679c\u8bbe\u7f6e\u4e86 filter \u4e3a\u540d\u79f0\u4e3a A.B \u7684 logger\uff0c\u5219\u8be5 logger \u548c\u5176\u5b50 logger \u7684\u4fe1\u606f\u4f1a\u88ab\u8f93\u51fa\uff0c\u5982 A.B,A.B.C. 1 2 3 4 5 6 7 8 9 10 11 import logging logging_format = \"[ %(asctime)s ] %(process)d - %(levelname)s \" logging_format += \" %(module)s :: %(funcName)s ():1 %(lineno)d : %(message)s \" logging_formater = logging . Formatter ( logging_format ) filehandler = logging . FileHandler ( 'test.log' , 'a' ) filter = logging . Filter ( 'b' ) filehandler . addFilter ( filter ) logger = logging . getLogger ( \"Operate\" ) logger . addHandler ( filehandler ) logger . setLevel ( logging . DEBUG ) logger . debug ( 'it is a debug info' )","title":"logging"},{"location":"notes_python/common_modules/pandas/","text":"Pandas \u00b6 A personal diary of DataFrame munging over the years. Data Types and Conversion \u00b6 Convert Series datatype to numeric (will error if column has non-numeric values) 1 df [ 'col' ] = pd . to_numeric ( df [ 'col' ]) Convert Series datatype to numeric, getting rid of any non-numeric values 1 df [ 'col' ] = df [ 'col' ] . astype ( str ) . convert_objects ( convert_numeric = True ) Convert Series datatype to numeric, changing non-numeric values to NaN 1 df [ 'col' ] = pd . to_numeric ( df [ 'col' ], errors = 'coerce' ) Convert Django queryset to DataFrame 1 2 3 qs = DjangoModelName . objects . all () q = qs . values () df = pd . DataFrame . from_records ( q ) Change data type of DataFrame column 1 df [ 'col' ] = df . column_name = df . column_name . astype ( np . int64 ) Exploring and Finding Data \u00b6 Get a report of all duplicate records in a DataFrame, based on specific columns 1 2 dupes = df [ df . duplicated ( [ 'col1' , 'col2' , 'col3' ], keep = False )] List unique values in a DataFrame column 1 df [ 'col' ] . unique () For each unique value in a DataFrame column, get a frequency count 1 df [ 'col' ] . value_counts () Grab DataFrame rows where column = a specific value 1 df = df . loc [ df . column == 'somevalue' ] Grab DataFrame rows where column value is present in a list 1 2 3 4 test_data = { 'hi' : 'yo' , 'bye' : 'later' } df = pd . DataFrame ( list ( d . items ()), columns = [ 'col1' , 'col2' ]) valuelist = [ 'yo' , 'heya' ] df [ df . col2 . isin ( valuelist )] Grab DataFrame rows where column value is not present in a list 1 2 3 4 test_data = { 'hi' : 'yo' , 'bye' : 'later' } df = pd . DataFrame ( list ( d . items ()), columns = [ 'col1' , 'col2' ]) valuelist = [ 'yo' , 'heya' ] df [ ~ df . col2 . isin ( valuelist )] Select from DataFrame using criteria from multiple columns (use | instead of & to do an OR) 1 newdf = df [( df [ 'column_one' ] > 2004 ) & ( df [ 'column_two' ] == 9 )] Loop through rows in a DataFrame (if you must) 1 2 for index , row in df . iterrows (): print ( index , row [ 'some column' ]) Much faster way to loop through DataFrame rows if you can work with tuples 1 2 for row in df . itertuples (): print ( row ) Get top n for each group of columns in a sorted DataFrame (make sure DataFrame is sorted first) 1 2 3 top5 = df . groupby ( [ 'groupingcol1' , 'groupingcol2' ]) . head ( 5 ) Grab DataFrame rows where specific column is null/notnull 1 newdf = df [ df [ 'column' ] . isnull ()] Select from DataFrame using multiple keys of a hierarchical index 1 2 3 df . xs ( ( 'index level 1 value' , 'index level 2 value' ), level = ( 'level 1' , 'level 2' )) Slice values in a DataFrame column (aka Series) 1 df . column . str [ 0 : 2 ] Get quick count of rows in a DataFrame 1 len ( df . index ) Get length of data in a DataFrame column 1 df . column_name . str . len () Updating and Cleaning Data \u00b6 Delete column from DataFrame 1 del df [ 'column' ] Rename several DataFrame columns 1 2 3 4 5 df = df . rename ( columns = { 'col1 old name' : 'col1 new name' , 'col2 old name' : 'col2 new name' , 'col3 old name' : 'col3 new name' , }) Lower-case all DataFrame column names 1 df . columns = map ( str . lower , df . columns ) Even more fancy DataFrame column re-naming lower-case all DataFrame column names (for example) 1 df . rename ( columns = lambda x : x . split ( '.' )[ - 1 ], inplace = True ) Lower-case everything in a DataFrame column 1 df . column_name = df . column_name . str . lower () Sort DataFrame by multiple columns 1 2 df = df . sort_values ( [ 'col1' , 'col2' , 'col3' ], ascending = [ 1 , 1 , 0 ]) Change all NaNs to None (useful before loading to a db) 1 df = df . where (( pd . notnull ( df )), None ) More pre-db insert cleanup\u2026make a pass through the DataFrame, stripping whitespace from strings and changing any empty values to None (not especially recommended but including here b/c I had to do this in real life once) 1 df = df . applymap ( lambda x : str ( x ) . strip () if len ( str ( x ) . strip ()) else None ) Get rid of non-numeric values throughout a DataFrame: 1 2 3 4 5 6 7 8 9 for col in refunds . columns . values : refunds [ col ] = refunds [ col ] . replace ( '[^0-9]+.-' , '' , regex = True ) ``` Set DataFrame column values based on other column values ``` python df . loc [( df [ 'column1' ] == some_value ) & ( df [ 'column2' ] == some_other_value ), [ 'column_to_change' ]] = new_value Clean up missing values in multiple DataFrame columns 1 2 3 4 5 6 7 8 df = df . fillna ({ 'col1' : 'missing' , 'col2' : '99.999' , 'col3' : '999' , 'col4' : 'missing' , 'col5' : 'missing' , 'col6' : '99' }) Doing calculations with DataFrame columns that have missing values. In example below, swap in 0 for df[\u2018col1\u2019] cells that contain null. 1 2 df [ 'new_col' ] = np . where ( pd . isnull ( df [ 'col1' ]), 0 , df [ 'col1' ]) + df [ 'col2' ] Split delimited values in a DataFrame column into two new columns 1 2 3 df [ 'new_col1' ], df [ 'new_col2' ] = zip ( * df [ 'original_col' ] . apply ( lambda x : x . split ( ': ' , 1 ))) Collapse hierarchical column indexes 1 df . columns = df . columns . get_level_values ( 0 ) Reshaping, Concatenating, and Merging Data \u00b6 Pivot data (with flexibility about what what becomes a column and what stays a row). 1 2 3 4 pd . pivot_table ( df , values = 'cell_value' , index = [ 'col1' , 'col2' , 'col3' ], # these stay as columns; will fail silently if any of these cols have null values columns = [ 'col4' ]) # data values in this column become their own column Concatenate two DataFrame columns into a new, single column (useful when dealing with composite keys, for example) 1 df [ 'newcol' ] = df [ 'col1' ] . astype ( str ) + df [ 'col2' ] . astype ( str ) Display and formatting \u00b6 Set up formatting so larger numbers aren\u2019t displayed in scientific notation 1 pd . set_option ( 'display.float_format' , lambda x : ' %.3f ' % x ) To display with commas and no decimals 1 pd . options . display . float_format = ' {:,.0f} ' . format Creating DataFrames \u00b6 Create a DataFrame from a Python dictionary 1 df = pd . DataFrame ( list ( a_dictionary . items ()), columns = [ 'column1' , 'column2' ]) Convert Django queryset to DataFrame 1 2 3 qs = DjangoModelName . objects . all () q = qs . values () df = pd . DataFrame . from_records ( q ) List unique values in a DataFrame column 1 pd . unique ( df . column_name . ravel ()) Grab DataFrame rows where column has certain values 1 2 valuelist = [ 'value1' , 'value2' , 'value3' ] df = df [ df . column . isin ( valuelist )] Grab DataFrame rows where column doesn\u2019t have certain values 1 2 value_list = [ 'value1' , 'value2' , 'value3' ] df = df [ ~ df . column . isin ( value_list )] Delete column from DataFrame 1 del df [ 'column' ] Select from DataFrame using criteria from multiple columns (use | instead of & to do an OR) 1 newdf = df [( df [ 'column_one' ] > 2004 ) & ( df [ 'column_two' ] == 9 )] Rename several DataFrame columns 1 2 3 4 5 df = df . rename ( columns = { 'col1 old name' : 'col1 new name' , 'col2 old name' : 'col2 new name' , 'col3 old name' : 'col3 new name' , }) Lower-case all DataFrame column names 1 df . columns = map ( str . lower , df . columns ) Even more fancy DataFrame column re-naming lower-case all DataFrame column names (for example) 1 df . rename ( columns = lambda x : x . split ( '.' )[ - 1 ], inplace = True ) Loop through rows in a DataFrame (if you must) 1 2 for index , row in df . iterrows (): print ( index , row [ 'some column' ]) Much faster way to loop through DataFrame rows if you can work with tuples (h/t hughamacmullaniv) 1 2 for row in df . itertuples (): print ( row ) Next few examples show how to work with text data in Pandas. Full list of .str functions Slice values in a DataFrame column (aka Series) 1 df . column . str [ 0 : 2 ] Lower-case everything in a DataFrame column 1 df . column_name = df . column_name . str . lower () Get length of data in a DataFrame column 1 df . column_name . str . len () Sort dataframe by multiple columns 1 df = df . sort ([ 'col1' , 'col2' , 'col3' ], ascending = [ 1 , 1 , 0 ]) Get top n for each group of columns in a sorted dataframe (make sure dataframe is sorted first) 1 top5 = df . groupby ([ 'groupingcol1' , 'groupingcol2' ]) . head ( 5 ) Grab DataFrame rows where specific column is null/notnull 1 newdf = df [ df [ 'column' ] . isnull ()] Select from DataFrame using multiple keys of a hierarchical index 1 df . xs (( 'index level 1 value' , 'index level 2 value' ), level = ( 'level 1' , 'level 2' )) Change all NaNs to None (useful before loading to a db) 1 df = df . where (( pd . notnull ( df )), None ) More pre-db insert cleanup\u2026make a pass through the dataframe, stripping whitespace from strings and changing any empty values to None (not especially recommended but including here b/c I had to do this in real life one time) 1 df = df . applymap ( lambda x : str ( x ) . strip () if len ( str ( x ) . strip ()) else None ) Get quick count of rows in a DataFrame 1 len ( df . index ) Pivot data (with flexibility about what what becomes a column and what stays a row). Syntax works on Pandas >= .14 1 2 3 4 pd . pivot_table ( df , values = 'cell_value' , index = [ 'col1' , 'col2' , 'col3' ], - these stay as columns ; will fail silently if any of these cols have null values columns = [ 'col4' ]) - data values in this column become their own column Change data type of DataFrame column 1 df . column_name = df . column_name . astype ( np . int64 ) Get rid of non-numeric values throughout a DataFrame: 1 2 for col in refunds . columns . values : refunds [ col ] = refunds [ col ] . replace ( '[^0-9]+.-' , '' , regex = True ) Set DataFrame column values based on other column values (h/t: @mlevkov) 1 df . loc [( df [ 'column1' ] == some_value ) & ( df [ 'column2' ] == some_other_value ), [ 'column_to_change' ]] = new_value Clean up missing values in multiple DataFrame columns 1 2 3 4 5 6 7 8 df = df . fillna ({ 'col1' : 'missing' , 'col2' : '99.999' , 'col3' : '999' , 'col4' : 'missing' , 'col5' : 'missing' , 'col6' : '99' }) Concatenate two DataFrame columns into a new, single column (useful when dealing with composite keys, for example) 1 df [ 'newcol' ] = df [ 'col1' ] . map ( str ) + df [ 'col2' ] . map ( str ) Doing calculations with DataFrame columns that have missing values In example below, swap in 0 for df[\u2018col1\u2019] cells that contain null 1 df [ 'new_col' ] = np . where ( pd . isnull ( df [ 'col1' ]), 0 , df [ 'col1' ]) + df [ 'col2' ] Split delimited values in a DataFrame column into two new columns 1 df [ 'new_col1' ], df [ 'new_col2' ] = zip ( * df [ 'original_col' ] . apply ( lambda x : x . split ( ': ' , 1 ))) Collapse hierarchical column indexes 1 df . columns = df . columns . get_level_values ( 0 ) Create a DataFrame from a Python dictionary 1 df = pd . DataFrame ( list ( a_dictionary . items ()), columns = [ 'column1' , 'column2' ]) Get a report of all duplicate records in a dataframe, based on specific columns 1 dupes = df [ df . duplicated ([ 'col1' , 'col2' , 'col3' ], keep = False )] Set up formatting so larger numbers aren\u2019t displayed in scientific notation (h/t @thecapacity) 1 pd . set_option ( 'display.float_format' , lambda x : ' %.3f ' % x ) Pandas Code example \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import pandas as pd import numpy as np from sqlalchemy import create_engine engine = create_engine ( 'mysql://root:xxx@127.0.0.1/lj?charset=utf8' ) house = pd . read_sql_table ( 'example' , engine ) house_dd = pd . read_sql_query ( 'select url, location, area, layout, size, buildtime, price, created from example group by url having count(url) > 1' , engine ) def strip ( text ): try : return text . strip () except AttributeError : return text def make_int ( text ): return int ( text . strip ( '\" ' )) df = pd . DataFrame () df1 = pd . read_csv ( 'example.csv' , sep = ';' ) df2 = pd . read_csv ( 'new.csv' , dtype = str , index_col = False , usecols = [ 'deal_num' , 'acount' , 'number' ], converters = { 'deal_num' : strip , 'acount' : strip , 'number' : make_int })","title":"Pandas"},{"location":"notes_python/common_modules/pandas/#pandas","text":"A personal diary of DataFrame munging over the years.","title":"Pandas"},{"location":"notes_python/common_modules/pandas/#data-types-and-conversion","text":"Convert Series datatype to numeric (will error if column has non-numeric values) 1 df [ 'col' ] = pd . to_numeric ( df [ 'col' ]) Convert Series datatype to numeric, getting rid of any non-numeric values 1 df [ 'col' ] = df [ 'col' ] . astype ( str ) . convert_objects ( convert_numeric = True ) Convert Series datatype to numeric, changing non-numeric values to NaN 1 df [ 'col' ] = pd . to_numeric ( df [ 'col' ], errors = 'coerce' ) Convert Django queryset to DataFrame 1 2 3 qs = DjangoModelName . objects . all () q = qs . values () df = pd . DataFrame . from_records ( q ) Change data type of DataFrame column 1 df [ 'col' ] = df . column_name = df . column_name . astype ( np . int64 )","title":"Data Types and Conversion"},{"location":"notes_python/common_modules/pandas/#exploring-and-finding-data","text":"Get a report of all duplicate records in a DataFrame, based on specific columns 1 2 dupes = df [ df . duplicated ( [ 'col1' , 'col2' , 'col3' ], keep = False )] List unique values in a DataFrame column 1 df [ 'col' ] . unique () For each unique value in a DataFrame column, get a frequency count 1 df [ 'col' ] . value_counts () Grab DataFrame rows where column = a specific value 1 df = df . loc [ df . column == 'somevalue' ] Grab DataFrame rows where column value is present in a list 1 2 3 4 test_data = { 'hi' : 'yo' , 'bye' : 'later' } df = pd . DataFrame ( list ( d . items ()), columns = [ 'col1' , 'col2' ]) valuelist = [ 'yo' , 'heya' ] df [ df . col2 . isin ( valuelist )] Grab DataFrame rows where column value is not present in a list 1 2 3 4 test_data = { 'hi' : 'yo' , 'bye' : 'later' } df = pd . DataFrame ( list ( d . items ()), columns = [ 'col1' , 'col2' ]) valuelist = [ 'yo' , 'heya' ] df [ ~ df . col2 . isin ( valuelist )] Select from DataFrame using criteria from multiple columns (use | instead of & to do an OR) 1 newdf = df [( df [ 'column_one' ] > 2004 ) & ( df [ 'column_two' ] == 9 )] Loop through rows in a DataFrame (if you must) 1 2 for index , row in df . iterrows (): print ( index , row [ 'some column' ]) Much faster way to loop through DataFrame rows if you can work with tuples 1 2 for row in df . itertuples (): print ( row ) Get top n for each group of columns in a sorted DataFrame (make sure DataFrame is sorted first) 1 2 3 top5 = df . groupby ( [ 'groupingcol1' , 'groupingcol2' ]) . head ( 5 ) Grab DataFrame rows where specific column is null/notnull 1 newdf = df [ df [ 'column' ] . isnull ()] Select from DataFrame using multiple keys of a hierarchical index 1 2 3 df . xs ( ( 'index level 1 value' , 'index level 2 value' ), level = ( 'level 1' , 'level 2' )) Slice values in a DataFrame column (aka Series) 1 df . column . str [ 0 : 2 ] Get quick count of rows in a DataFrame 1 len ( df . index ) Get length of data in a DataFrame column 1 df . column_name . str . len ()","title":"Exploring and Finding Data"},{"location":"notes_python/common_modules/pandas/#updating-and-cleaning-data","text":"Delete column from DataFrame 1 del df [ 'column' ] Rename several DataFrame columns 1 2 3 4 5 df = df . rename ( columns = { 'col1 old name' : 'col1 new name' , 'col2 old name' : 'col2 new name' , 'col3 old name' : 'col3 new name' , }) Lower-case all DataFrame column names 1 df . columns = map ( str . lower , df . columns ) Even more fancy DataFrame column re-naming lower-case all DataFrame column names (for example) 1 df . rename ( columns = lambda x : x . split ( '.' )[ - 1 ], inplace = True ) Lower-case everything in a DataFrame column 1 df . column_name = df . column_name . str . lower () Sort DataFrame by multiple columns 1 2 df = df . sort_values ( [ 'col1' , 'col2' , 'col3' ], ascending = [ 1 , 1 , 0 ]) Change all NaNs to None (useful before loading to a db) 1 df = df . where (( pd . notnull ( df )), None ) More pre-db insert cleanup\u2026make a pass through the DataFrame, stripping whitespace from strings and changing any empty values to None (not especially recommended but including here b/c I had to do this in real life once) 1 df = df . applymap ( lambda x : str ( x ) . strip () if len ( str ( x ) . strip ()) else None ) Get rid of non-numeric values throughout a DataFrame: 1 2 3 4 5 6 7 8 9 for col in refunds . columns . values : refunds [ col ] = refunds [ col ] . replace ( '[^0-9]+.-' , '' , regex = True ) ``` Set DataFrame column values based on other column values ``` python df . loc [( df [ 'column1' ] == some_value ) & ( df [ 'column2' ] == some_other_value ), [ 'column_to_change' ]] = new_value Clean up missing values in multiple DataFrame columns 1 2 3 4 5 6 7 8 df = df . fillna ({ 'col1' : 'missing' , 'col2' : '99.999' , 'col3' : '999' , 'col4' : 'missing' , 'col5' : 'missing' , 'col6' : '99' }) Doing calculations with DataFrame columns that have missing values. In example below, swap in 0 for df[\u2018col1\u2019] cells that contain null. 1 2 df [ 'new_col' ] = np . where ( pd . isnull ( df [ 'col1' ]), 0 , df [ 'col1' ]) + df [ 'col2' ] Split delimited values in a DataFrame column into two new columns 1 2 3 df [ 'new_col1' ], df [ 'new_col2' ] = zip ( * df [ 'original_col' ] . apply ( lambda x : x . split ( ': ' , 1 ))) Collapse hierarchical column indexes 1 df . columns = df . columns . get_level_values ( 0 )","title":"Updating and Cleaning Data"},{"location":"notes_python/common_modules/pandas/#reshaping-concatenating-and-merging-data","text":"Pivot data (with flexibility about what what becomes a column and what stays a row). 1 2 3 4 pd . pivot_table ( df , values = 'cell_value' , index = [ 'col1' , 'col2' , 'col3' ], # these stay as columns; will fail silently if any of these cols have null values columns = [ 'col4' ]) # data values in this column become their own column Concatenate two DataFrame columns into a new, single column (useful when dealing with composite keys, for example) 1 df [ 'newcol' ] = df [ 'col1' ] . astype ( str ) + df [ 'col2' ] . astype ( str )","title":"Reshaping, Concatenating, and Merging Data"},{"location":"notes_python/common_modules/pandas/#display-and-formatting","text":"Set up formatting so larger numbers aren\u2019t displayed in scientific notation 1 pd . set_option ( 'display.float_format' , lambda x : ' %.3f ' % x ) To display with commas and no decimals 1 pd . options . display . float_format = ' {:,.0f} ' . format","title":"Display and formatting"},{"location":"notes_python/common_modules/pandas/#creating-dataframes","text":"Create a DataFrame from a Python dictionary 1 df = pd . DataFrame ( list ( a_dictionary . items ()), columns = [ 'column1' , 'column2' ]) Convert Django queryset to DataFrame 1 2 3 qs = DjangoModelName . objects . all () q = qs . values () df = pd . DataFrame . from_records ( q ) List unique values in a DataFrame column 1 pd . unique ( df . column_name . ravel ()) Grab DataFrame rows where column has certain values 1 2 valuelist = [ 'value1' , 'value2' , 'value3' ] df = df [ df . column . isin ( valuelist )] Grab DataFrame rows where column doesn\u2019t have certain values 1 2 value_list = [ 'value1' , 'value2' , 'value3' ] df = df [ ~ df . column . isin ( value_list )] Delete column from DataFrame 1 del df [ 'column' ] Select from DataFrame using criteria from multiple columns (use | instead of & to do an OR) 1 newdf = df [( df [ 'column_one' ] > 2004 ) & ( df [ 'column_two' ] == 9 )] Rename several DataFrame columns 1 2 3 4 5 df = df . rename ( columns = { 'col1 old name' : 'col1 new name' , 'col2 old name' : 'col2 new name' , 'col3 old name' : 'col3 new name' , }) Lower-case all DataFrame column names 1 df . columns = map ( str . lower , df . columns ) Even more fancy DataFrame column re-naming lower-case all DataFrame column names (for example) 1 df . rename ( columns = lambda x : x . split ( '.' )[ - 1 ], inplace = True ) Loop through rows in a DataFrame (if you must) 1 2 for index , row in df . iterrows (): print ( index , row [ 'some column' ]) Much faster way to loop through DataFrame rows if you can work with tuples (h/t hughamacmullaniv) 1 2 for row in df . itertuples (): print ( row ) Next few examples show how to work with text data in Pandas. Full list of .str functions Slice values in a DataFrame column (aka Series) 1 df . column . str [ 0 : 2 ] Lower-case everything in a DataFrame column 1 df . column_name = df . column_name . str . lower () Get length of data in a DataFrame column 1 df . column_name . str . len () Sort dataframe by multiple columns 1 df = df . sort ([ 'col1' , 'col2' , 'col3' ], ascending = [ 1 , 1 , 0 ]) Get top n for each group of columns in a sorted dataframe (make sure dataframe is sorted first) 1 top5 = df . groupby ([ 'groupingcol1' , 'groupingcol2' ]) . head ( 5 ) Grab DataFrame rows where specific column is null/notnull 1 newdf = df [ df [ 'column' ] . isnull ()] Select from DataFrame using multiple keys of a hierarchical index 1 df . xs (( 'index level 1 value' , 'index level 2 value' ), level = ( 'level 1' , 'level 2' )) Change all NaNs to None (useful before loading to a db) 1 df = df . where (( pd . notnull ( df )), None ) More pre-db insert cleanup\u2026make a pass through the dataframe, stripping whitespace from strings and changing any empty values to None (not especially recommended but including here b/c I had to do this in real life one time) 1 df = df . applymap ( lambda x : str ( x ) . strip () if len ( str ( x ) . strip ()) else None ) Get quick count of rows in a DataFrame 1 len ( df . index ) Pivot data (with flexibility about what what becomes a column and what stays a row). Syntax works on Pandas >= .14 1 2 3 4 pd . pivot_table ( df , values = 'cell_value' , index = [ 'col1' , 'col2' , 'col3' ], - these stay as columns ; will fail silently if any of these cols have null values columns = [ 'col4' ]) - data values in this column become their own column Change data type of DataFrame column 1 df . column_name = df . column_name . astype ( np . int64 ) Get rid of non-numeric values throughout a DataFrame: 1 2 for col in refunds . columns . values : refunds [ col ] = refunds [ col ] . replace ( '[^0-9]+.-' , '' , regex = True ) Set DataFrame column values based on other column values (h/t: @mlevkov) 1 df . loc [( df [ 'column1' ] == some_value ) & ( df [ 'column2' ] == some_other_value ), [ 'column_to_change' ]] = new_value Clean up missing values in multiple DataFrame columns 1 2 3 4 5 6 7 8 df = df . fillna ({ 'col1' : 'missing' , 'col2' : '99.999' , 'col3' : '999' , 'col4' : 'missing' , 'col5' : 'missing' , 'col6' : '99' }) Concatenate two DataFrame columns into a new, single column (useful when dealing with composite keys, for example) 1 df [ 'newcol' ] = df [ 'col1' ] . map ( str ) + df [ 'col2' ] . map ( str ) Doing calculations with DataFrame columns that have missing values In example below, swap in 0 for df[\u2018col1\u2019] cells that contain null 1 df [ 'new_col' ] = np . where ( pd . isnull ( df [ 'col1' ]), 0 , df [ 'col1' ]) + df [ 'col2' ] Split delimited values in a DataFrame column into two new columns 1 df [ 'new_col1' ], df [ 'new_col2' ] = zip ( * df [ 'original_col' ] . apply ( lambda x : x . split ( ': ' , 1 ))) Collapse hierarchical column indexes 1 df . columns = df . columns . get_level_values ( 0 ) Create a DataFrame from a Python dictionary 1 df = pd . DataFrame ( list ( a_dictionary . items ()), columns = [ 'column1' , 'column2' ]) Get a report of all duplicate records in a dataframe, based on specific columns 1 dupes = df [ df . duplicated ([ 'col1' , 'col2' , 'col3' ], keep = False )] Set up formatting so larger numbers aren\u2019t displayed in scientific notation (h/t @thecapacity) 1 pd . set_option ( 'display.float_format' , lambda x : ' %.3f ' % x )","title":"Creating DataFrames"},{"location":"notes_python/common_modules/pandas/#pandas-code-example","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import pandas as pd import numpy as np from sqlalchemy import create_engine engine = create_engine ( 'mysql://root:xxx@127.0.0.1/lj?charset=utf8' ) house = pd . read_sql_table ( 'example' , engine ) house_dd = pd . read_sql_query ( 'select url, location, area, layout, size, buildtime, price, created from example group by url having count(url) > 1' , engine ) def strip ( text ): try : return text . strip () except AttributeError : return text def make_int ( text ): return int ( text . strip ( '\" ' )) df = pd . DataFrame () df1 = pd . read_csv ( 'example.csv' , sep = ';' ) df2 = pd . read_csv ( 'new.csv' , dtype = str , index_col = False , usecols = [ 'deal_num' , 'acount' , 'number' ], converters = { 'deal_num' : strip , 'acount' : strip , 'number' : make_int })","title":"Pandas Code example"},{"location":"notes_python/common_modules/pytest/","text":"Pytest \u00b6 pytest enable logging print \u00b6 1 2 pytest -s pytest.main ( args =[ '-s' , os.path.abspath ( __file__ )])","title":"Pytest"},{"location":"notes_python/common_modules/pytest/#pytest","text":"","title":"Pytest"},{"location":"notes_python/common_modules/pytest/#pytest-enable-logging-print","text":"1 2 pytest -s pytest.main ( args =[ '-s' , os.path.abspath ( __file__ )])","title":"pytest enable logging print"},{"location":"notes_python/common_modules/selenium/","text":"Selenium \u00b6 css selector don\u2019t support #0","title":"Selenium"},{"location":"notes_python/common_modules/selenium/#selenium","text":"css selector don\u2019t support #0","title":"Selenium"},{"location":"notes_python/common_modules/sqlalchemy/","text":"Sqlachemy \u00b6 SQLALchemy \u5b57\u6bb5 \u00b6 \u7c7b\u578b\u540d python\u7c7b\u578b \u8bf4\u660e Integer int \u666e\u901a\u6574\u6570\uff0c32\u4f4d Float float \u6d6e\u70b9\u6570 String str \u53d8\u957f\u5b57\u7b26\u4e32 Text str \u53d8\u957f\u5b57\u7b26\u4e32\uff0c\u5bf9\u8f83\u957f\u5b57\u7b26\u4e32\u505a\u4e86\u4f18\u5316 Boolean bool \u5e03\u5c14\u503c Pickle Type \u4efb\u4f55python\u5bf9\u8c61 \u81ea\u52a8\u4f7f\u7528Pickle\u5e8f\u5217\u5316 SQLALchemy \u5b57\u6bb5\u9009\u9879 \u00b6 \u9009\u9879\u540d \u8bf4\u660e primarykey \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u8868\u793a\u4e3b\u952e unique \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u8fd9\u5217\u4e0d\u91cd\u590d index \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u521b\u5efa\u7d22\u5f15\uff0c\u63d0\u5347\u67e5\u8be2\u6548\u7387 nullable \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u5141\u8bb8\u7a7a\u503c default \u4e3a\u8fd9\u5217\u5b9a\u4e49\u9ed8\u8ba4\u503c check db connectable 1 2 3 4 from sqlalchemy import MetaData , Table , create_engine DEFAULT_URL = \"mysql://wl:wl@localhost:3306/wl\" db = create_engine ( DEFAULT_URL ) db . connect ()","title":"Sqlachemy"},{"location":"notes_python/common_modules/sqlalchemy/#sqlachemy","text":"","title":"Sqlachemy"},{"location":"notes_python/common_modules/sqlalchemy/#sqlalchemy","text":"\u7c7b\u578b\u540d python\u7c7b\u578b \u8bf4\u660e Integer int \u666e\u901a\u6574\u6570\uff0c32\u4f4d Float float \u6d6e\u70b9\u6570 String str \u53d8\u957f\u5b57\u7b26\u4e32 Text str \u53d8\u957f\u5b57\u7b26\u4e32\uff0c\u5bf9\u8f83\u957f\u5b57\u7b26\u4e32\u505a\u4e86\u4f18\u5316 Boolean bool \u5e03\u5c14\u503c Pickle Type \u4efb\u4f55python\u5bf9\u8c61 \u81ea\u52a8\u4f7f\u7528Pickle\u5e8f\u5217\u5316","title":"SQLALchemy \u5b57\u6bb5"},{"location":"notes_python/common_modules/sqlalchemy/#sqlalchemy_1","text":"\u9009\u9879\u540d \u8bf4\u660e primarykey \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u8868\u793a\u4e3b\u952e unique \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u8fd9\u5217\u4e0d\u91cd\u590d index \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u521b\u5efa\u7d22\u5f15\uff0c\u63d0\u5347\u67e5\u8be2\u6548\u7387 nullable \u5982\u679c\u8bbe\u4e3aTrue\uff0c\u5141\u8bb8\u7a7a\u503c default \u4e3a\u8fd9\u5217\u5b9a\u4e49\u9ed8\u8ba4\u503c check db connectable 1 2 3 4 from sqlalchemy import MetaData , Table , create_engine DEFAULT_URL = \"mysql://wl:wl@localhost:3306/wl\" db = create_engine ( DEFAULT_URL ) db . connect ()","title":"SQLALchemy \u5b57\u6bb5\u9009\u9879"},{"location":"notes_tech/git/","text":"Git cheat list \u00b6 list of all affected files both tracked/untracked (for automation) 1 git status --porcelain name of the current banch and nothing else (for automation) 1 git rev-parse --abbrev-ref HEAD all commits that your branch have that are not yet in master 1 git log master..<HERE_COMES_YOUR_BRANCH_NAME> setting up a character used for comments 1 git config core.commentchar <HERE_COMES_YOUR_COMMENT_CHAR> fixing fatal: Could not parse object after unsuccessful revert 1 git revert --quit view diff with inline changes (by lines) 1 git diff --word-diff = plain master view diff of changes in a single line file (per char) 1 git diff --word-diff-regex = . master view quick stat of a diff 1 2 3 git diff --shortstat master git diff --numstat master git diff --dirstat master undo last just made commit 1 git reset HEAD~ list last 20 hashes in reverse 1 git log --format = \"%p..%h %cd %<(17)%an %s\" --date = format: \"%a %m/%d %H:%M\" --reverse -n 20 list commits between dates 1 git log --format = \"%p..%h %cd %<(17)%an %s\" --date = format: \"%a %m/%d %H:%M\" --reverse --after = 2016 -11-09T00:00:00-05:00 --before = 2016 -11-10T00:00:00-05:00 try a new output for diffing 1 2 git diff --compaction-heuristic ... --color-words ... enable more thorough comparison 1 git config --global diff.algorithm patience restoring a file from a certain commit relative to the latest 1 git checkout HEAD~<NUMBER> -- <RELATIVE_PATH_TO_FILE> restoring a file from a certain commit relative to the given commit 1 git checkout <COMMIT_HASH>~<NUMBER> -- <RELATIVE_PATH_TO_FILE> restoring a file from a certain commit 1 git checkout <COMMIT_HASH> -- <RELATIVE_PATH_TO_FILE> creating a diff file from unstaged changes for a specific folder 1 git diff -- <RELATIVE_PATH_TO_FOLDER> changes.diff applying a diff file, go to the root directory of your repository, run: 1 git apply changes.diff show differences between last commit and currrent changes: 1 git difftool -d referring to: last commits ... HEAD~1 ... last 3 commits ... HEAD~3 ... show the history of changes of a file 1 git log -p -- ./Scripts/Libs/select2.js ignoring whitespaces 1 git rebase --ignore-whitespace <BRANCH_NAME> pulling for fast-forward only (eliminating a chance for unintended merging) 1 git pull --ff-only list of all tags 1 2 git fetch git tag -l archive a branch using tags 1 2 git tag <TAG_NAME> <BRANCH_NAME> git push origin --tags you can delete your branch now get a tagged branch 1 git checkout -b <BRANCH_NAME> <TAG_NAME> list of all branches that haven\u2019t been merged to master 1 git branch --no-merge master enable more elaborate diff algorithm by default 1 git config --global diff.algorithm histogram list of all developers 1 git shortlog -s -n -e display graph of branches 1 git log --decorate --graph --all --date = relative or 1 git log --decorate --graph --all --oneline remembering the password 1 2 git config --global credential.helper store git fetch the first command tells git to remember the credentials that you are going to provide for the second command path to the global config 1 C: \\U sers \\B ykov \\. gitconfig example of a global config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [ user ] email = ***** name = Aleksey Bykov password = ***** [ merge ] tool = p4merge [ mergetool \"p4merge\" ] cmd = p4merge.exe \\\" $BASE \\\" \\\" $LOCAL \\\" \\\" $REMOTE \\\" \\\" $MERGED \\\" path = \\\" C:/Program Files/Perforce \\\" trustExitCode = false [ push ] default = simple [ diff ] tool = meld compactionHeuristic = true [ difftool \"p4merge\" ] cmd = p4merge.exe \\\" $LOCAL \\\" \\\" $REMOTE \\\" path = C:/Program Files/Perforce/p4merge.exe [ difftool \"meld\" ] cmd = \\\" C:/Program Files ( x86 ) /Meld/Meld.exe \\\" \\\" $LOCAL \\\" \\\" $REMOTE \\\" path = C:/Program Files ( x86 ) /Meld/Meld.exe viewing differences between current and other branch 1 git difftool -d BRANCH_NAME viewing differences between current and stash 1 git difftool -d stash viewing differences between several commits in a diff tool 1 git difftool -d HEAD@ { 2 } ...HEAD@ { 0 } view all global settings 1 git config --global -l delete tag 1 2 git tag -d my-tag git push origin :refs/tags/my-tag pushing tags 1 git push --tags checking the history of a file or a folder 1 git log -- <FILE_OR_FOLDER> disabling the scroller 1 git --no-pager <...> who pushed last which branch 1 git for -each-ref --format = \"%(committerdate) %09 %(refname) %09 %(authorname)\" deleting remote branch 1 git push origin :<BRANCH_NAME> deleting remote branch localy 1 git branch -r -D <BRANCH_NAME> or to sync with the remote 1 git fetch --all --prune deleting local branch 1 git branch -d <BRANCH_NAME> list actual remote branchs 1 git ls-remote --heads origin list all remote (fetched) branches 1 git branch -r list all local branches 1 git branch -l find to which branch a given commit belongs 1 git branch --contains <COMMIT> updating from a forked repository 1 2 3 git remote add upstream https://github.com/Microsoft/TypeScript.git git fetch upstream git rebase upstream/master add gitignore, stop tracking some ignore files 1 2 git rm -r --cached . git ci -m \"update git ignore\"","title":"Git cheat list"},{"location":"notes_tech/git/#git-cheat-list","text":"list of all affected files both tracked/untracked (for automation) 1 git status --porcelain name of the current banch and nothing else (for automation) 1 git rev-parse --abbrev-ref HEAD all commits that your branch have that are not yet in master 1 git log master..<HERE_COMES_YOUR_BRANCH_NAME> setting up a character used for comments 1 git config core.commentchar <HERE_COMES_YOUR_COMMENT_CHAR> fixing fatal: Could not parse object after unsuccessful revert 1 git revert --quit view diff with inline changes (by lines) 1 git diff --word-diff = plain master view diff of changes in a single line file (per char) 1 git diff --word-diff-regex = . master view quick stat of a diff 1 2 3 git diff --shortstat master git diff --numstat master git diff --dirstat master undo last just made commit 1 git reset HEAD~ list last 20 hashes in reverse 1 git log --format = \"%p..%h %cd %<(17)%an %s\" --date = format: \"%a %m/%d %H:%M\" --reverse -n 20 list commits between dates 1 git log --format = \"%p..%h %cd %<(17)%an %s\" --date = format: \"%a %m/%d %H:%M\" --reverse --after = 2016 -11-09T00:00:00-05:00 --before = 2016 -11-10T00:00:00-05:00 try a new output for diffing 1 2 git diff --compaction-heuristic ... --color-words ... enable more thorough comparison 1 git config --global diff.algorithm patience restoring a file from a certain commit relative to the latest 1 git checkout HEAD~<NUMBER> -- <RELATIVE_PATH_TO_FILE> restoring a file from a certain commit relative to the given commit 1 git checkout <COMMIT_HASH>~<NUMBER> -- <RELATIVE_PATH_TO_FILE> restoring a file from a certain commit 1 git checkout <COMMIT_HASH> -- <RELATIVE_PATH_TO_FILE> creating a diff file from unstaged changes for a specific folder 1 git diff -- <RELATIVE_PATH_TO_FOLDER> changes.diff applying a diff file, go to the root directory of your repository, run: 1 git apply changes.diff show differences between last commit and currrent changes: 1 git difftool -d referring to: last commits ... HEAD~1 ... last 3 commits ... HEAD~3 ... show the history of changes of a file 1 git log -p -- ./Scripts/Libs/select2.js ignoring whitespaces 1 git rebase --ignore-whitespace <BRANCH_NAME> pulling for fast-forward only (eliminating a chance for unintended merging) 1 git pull --ff-only list of all tags 1 2 git fetch git tag -l archive a branch using tags 1 2 git tag <TAG_NAME> <BRANCH_NAME> git push origin --tags you can delete your branch now get a tagged branch 1 git checkout -b <BRANCH_NAME> <TAG_NAME> list of all branches that haven\u2019t been merged to master 1 git branch --no-merge master enable more elaborate diff algorithm by default 1 git config --global diff.algorithm histogram list of all developers 1 git shortlog -s -n -e display graph of branches 1 git log --decorate --graph --all --date = relative or 1 git log --decorate --graph --all --oneline remembering the password 1 2 git config --global credential.helper store git fetch the first command tells git to remember the credentials that you are going to provide for the second command path to the global config 1 C: \\U sers \\B ykov \\. gitconfig example of a global config 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 [ user ] email = ***** name = Aleksey Bykov password = ***** [ merge ] tool = p4merge [ mergetool \"p4merge\" ] cmd = p4merge.exe \\\" $BASE \\\" \\\" $LOCAL \\\" \\\" $REMOTE \\\" \\\" $MERGED \\\" path = \\\" C:/Program Files/Perforce \\\" trustExitCode = false [ push ] default = simple [ diff ] tool = meld compactionHeuristic = true [ difftool \"p4merge\" ] cmd = p4merge.exe \\\" $LOCAL \\\" \\\" $REMOTE \\\" path = C:/Program Files/Perforce/p4merge.exe [ difftool \"meld\" ] cmd = \\\" C:/Program Files ( x86 ) /Meld/Meld.exe \\\" \\\" $LOCAL \\\" \\\" $REMOTE \\\" path = C:/Program Files ( x86 ) /Meld/Meld.exe viewing differences between current and other branch 1 git difftool -d BRANCH_NAME viewing differences between current and stash 1 git difftool -d stash viewing differences between several commits in a diff tool 1 git difftool -d HEAD@ { 2 } ...HEAD@ { 0 } view all global settings 1 git config --global -l delete tag 1 2 git tag -d my-tag git push origin :refs/tags/my-tag pushing tags 1 git push --tags checking the history of a file or a folder 1 git log -- <FILE_OR_FOLDER> disabling the scroller 1 git --no-pager <...> who pushed last which branch 1 git for -each-ref --format = \"%(committerdate) %09 %(refname) %09 %(authorname)\" deleting remote branch 1 git push origin :<BRANCH_NAME> deleting remote branch localy 1 git branch -r -D <BRANCH_NAME> or to sync with the remote 1 git fetch --all --prune deleting local branch 1 git branch -d <BRANCH_NAME> list actual remote branchs 1 git ls-remote --heads origin list all remote (fetched) branches 1 git branch -r list all local branches 1 git branch -l find to which branch a given commit belongs 1 git branch --contains <COMMIT> updating from a forked repository 1 2 3 git remote add upstream https://github.com/Microsoft/TypeScript.git git fetch upstream git rebase upstream/master add gitignore, stop tracking some ignore files 1 2 git rm -r --cached . git ci -m \"update git ignore\"","title":"Git cheat list"},{"location":"notes_tech/javascript/","text":"JS notes \u00b6 Starting a new project 1 yarn init Adding a dependency 1 2 3 yarn add [package] yarn add [package]@[version] yarn add [package]@[tag] Adding a dependency to different categories of dependencies Add to devDependencies, peerDependencies, and optionalDependencies respectively: 1 2 3 yarn add [package] --dev yarn add [package] --peer yarn add [package] --optional Upgrading a dependency 1 2 3 yarn upgrade [package] yarn upgrade [package]@[version] yarn upgrade [package]@[tag] Removing a dependency 1 yarn remove [package] Installing all the dependencies of project 1 2 3 yarn # or yarn install","title":"JS notes"},{"location":"notes_tech/javascript/#js-notes","text":"Starting a new project 1 yarn init Adding a dependency 1 2 3 yarn add [package] yarn add [package]@[version] yarn add [package]@[tag] Adding a dependency to different categories of dependencies Add to devDependencies, peerDependencies, and optionalDependencies respectively: 1 2 3 yarn add [package] --dev yarn add [package] --peer yarn add [package] --optional Upgrading a dependency 1 2 3 yarn upgrade [package] yarn upgrade [package]@[version] yarn upgrade [package]@[tag] Removing a dependency 1 yarn remove [package] Installing all the dependencies of project 1 2 3 yarn # or yarn install","title":"JS notes"},{"location":"notes_tech/mercurial/","text":"Mercurial Notes \u00b6 Docs: https://mercurial.selenic.com/guide Ignore: http://hgignore.io/ Global Config \u00b6 The global config file is located at ~ (search for .hgrc on OS X or Mercurial.ini on Windows). Update config: hg config --edit 1 2 3 4 5 6 ~/.hgrc: [ ui ] username = Username <name@domain.com> editor = nano ignore = ~/.hgignore General \u00b6 Initialize: hg init Get everything ready to commit: hg add Commit removed files: hg addremove Commit changes: hg commit -m \"Message\" (Use --amend to update previous commit or rewrite the previous commit message.) Only commit some files: hg commit --include file1.txt --include file2.txt -m \"Message\" (Short form: -I ) Commit everything but some files: hg commit --exclude file1.txt --exclude file2.txt -m \"Message\" (Short form: -X ) Check status: hg status Check status of tracked files only: hg status -mard Get current info: hg summary Check current heads: hg heads (Use hg merge to combine multiple heads) Untrack commited files: hg forget filename.txt (Takes effect with the next commit, not immediately.) Drop uncommited changes: hg revert -C filename.txt (Suppress .orig files with -C flag.) Branches \u00b6 A named branch is a chapter. Every page has a chapter number written in the margin. This groups related pages together. ( source ) List branches: hg branches Add new branch: hg branch branchname Change branch: hg checkout branchname Tags \u00b6 A tag is a sticky note on a page you find interesting. It stays on the same page and can be used to find that page easily. ( source ) List tags: hg tags Add new tag: hg tag tagname Bookmarks \u00b6 A bookmark is a bookmark. As you move from page to page, you move the bookmark forward with you. You can use multiple bookmarks to keep track of progress through different parts of the book. ( source ) List bookmarks: hg bookmarks Add new bookmark: hg bookmark bookmarkname Log \u00b6 Show commits: hg log Sow last 5 commits: hg log --limit 5 Show commits as graph: hg log -G Pick commits from author: hg log -u <author> -M Compare \u00b6 Compare modified files: hg diff Collaborate \u00b6 Clone a project: hg clone http://domain.com/repository/hello Pull from remote: hg pull Note: hg update must follow after hg pull ! Pull and update: hg pull -u Force update: hg update --check Pull a remote branch: hg pull -r branchname Push to remote: hg push Check unpushed commits: hg out Backup \u00b6 Backup project: hg archive backup.zip Create backup excluding .hg files: hg archive project.tar.gz -X \".hg*\" Restore & Rollback Rollback previous commit: hg rollback Checkout a custom revision (e.g. revision 38): hg update -r 38 Get rid of the changes of a special revision: hg backout -r 38 (Keeps history, needs new commit) Strip \u00b6 Enable extension via .hgrc : 1 2 [ extensions ] strip = Delete everything til and including rev 38: hg strip 38 (History will be deleted, too.) Undo strip : hg unbundle /path/to/strip-backup.hg Note: Run hg update after restoring a backup from hg strip Further Notes \u00b6 Mercurial will push/pull all branches by default, while git will push/pull only the current branch.","title":"Mercurial Notes"},{"location":"notes_tech/mercurial/#mercurial-notes","text":"Docs: https://mercurial.selenic.com/guide Ignore: http://hgignore.io/","title":"Mercurial Notes"},{"location":"notes_tech/mercurial/#global-config","text":"The global config file is located at ~ (search for .hgrc on OS X or Mercurial.ini on Windows). Update config: hg config --edit 1 2 3 4 5 6 ~/.hgrc: [ ui ] username = Username <name@domain.com> editor = nano ignore = ~/.hgignore","title":"Global Config"},{"location":"notes_tech/mercurial/#general","text":"Initialize: hg init Get everything ready to commit: hg add Commit removed files: hg addremove Commit changes: hg commit -m \"Message\" (Use --amend to update previous commit or rewrite the previous commit message.) Only commit some files: hg commit --include file1.txt --include file2.txt -m \"Message\" (Short form: -I ) Commit everything but some files: hg commit --exclude file1.txt --exclude file2.txt -m \"Message\" (Short form: -X ) Check status: hg status Check status of tracked files only: hg status -mard Get current info: hg summary Check current heads: hg heads (Use hg merge to combine multiple heads) Untrack commited files: hg forget filename.txt (Takes effect with the next commit, not immediately.) Drop uncommited changes: hg revert -C filename.txt (Suppress .orig files with -C flag.)","title":"General"},{"location":"notes_tech/mercurial/#branches","text":"A named branch is a chapter. Every page has a chapter number written in the margin. This groups related pages together. ( source ) List branches: hg branches Add new branch: hg branch branchname Change branch: hg checkout branchname","title":"Branches"},{"location":"notes_tech/mercurial/#tags","text":"A tag is a sticky note on a page you find interesting. It stays on the same page and can be used to find that page easily. ( source ) List tags: hg tags Add new tag: hg tag tagname","title":"Tags"},{"location":"notes_tech/mercurial/#bookmarks","text":"A bookmark is a bookmark. As you move from page to page, you move the bookmark forward with you. You can use multiple bookmarks to keep track of progress through different parts of the book. ( source ) List bookmarks: hg bookmarks Add new bookmark: hg bookmark bookmarkname","title":"Bookmarks"},{"location":"notes_tech/mercurial/#log","text":"Show commits: hg log Sow last 5 commits: hg log --limit 5 Show commits as graph: hg log -G Pick commits from author: hg log -u <author> -M","title":"Log"},{"location":"notes_tech/mercurial/#compare","text":"Compare modified files: hg diff","title":"Compare"},{"location":"notes_tech/mercurial/#collaborate","text":"Clone a project: hg clone http://domain.com/repository/hello Pull from remote: hg pull Note: hg update must follow after hg pull ! Pull and update: hg pull -u Force update: hg update --check Pull a remote branch: hg pull -r branchname Push to remote: hg push Check unpushed commits: hg out","title":"Collaborate"},{"location":"notes_tech/mercurial/#backup","text":"Backup project: hg archive backup.zip Create backup excluding .hg files: hg archive project.tar.gz -X \".hg*\" Restore & Rollback Rollback previous commit: hg rollback Checkout a custom revision (e.g. revision 38): hg update -r 38 Get rid of the changes of a special revision: hg backout -r 38 (Keeps history, needs new commit)","title":"Backup"},{"location":"notes_tech/mercurial/#strip","text":"Enable extension via .hgrc : 1 2 [ extensions ] strip = Delete everything til and including rev 38: hg strip 38 (History will be deleted, too.) Undo strip : hg unbundle /path/to/strip-backup.hg Note: Run hg update after restoring a backup from hg strip","title":"Strip"},{"location":"notes_tech/mercurial/#further-notes","text":"Mercurial will push/pull all branches by default, while git will push/pull only the current branch.","title":"Further Notes"},{"location":"notes_tech/mysql/","text":"mysql opr records \u00b6 steps to solove mariadb ERROR 1045 (28000): Access denied for user \u2018root\u2019@\u2019localhost\u2019 (using password: YES) \u00b6 1 2 3 sudo systemctl stop mariadb.service # kill mariadb.pid vi /etc/my.cnf under [mysqld] add following line skip-grant-tables 1 2 sudo systemctl start mariadb.service mysql -u root 1 2 3 update mysql . user set Password = password ( 'xxx' ) where User = 'root' , Host = 'localhost' ; flush privileges ; quit restore my.cnf 1 sudo systemctl restart mariadb.service Special cases: check if localhost for root exists check plugin is empty check error info, the host after root mysql add user and enable remote connect \u00b6 1 2 3 4 create user wl identified by 'wl' ; GRANT ALL privileges on * . * to wl @'%' identified by 'wl' ; flush privileges ; show grants for wl ; incase firewall has been enable \u00b6 1 2 3 4 5 6 7 centos 7 sudo firewall-cmd --list-ports sudo firewall-cmd --zone = public --add-port = 3306 /tcp --permanent sudo firewall-cmd --reload sudo systemctl stop firewalld.service sudo systemctl disable firewalld.service firewall-cmd --zone = public --remove-port = 80 /tcp --permanent","title":"mysql opr records"},{"location":"notes_tech/mysql/#mysql-opr-records","text":"","title":"mysql opr records"},{"location":"notes_tech/mysql/#steps-to-solove-mariadb-error-1045-28000-access-denied-for-user-rootlocalhost-using-password-yes","text":"1 2 3 sudo systemctl stop mariadb.service # kill mariadb.pid vi /etc/my.cnf under [mysqld] add following line skip-grant-tables 1 2 sudo systemctl start mariadb.service mysql -u root 1 2 3 update mysql . user set Password = password ( 'xxx' ) where User = 'root' , Host = 'localhost' ; flush privileges ; quit restore my.cnf 1 sudo systemctl restart mariadb.service Special cases: check if localhost for root exists check plugin is empty check error info, the host after root","title":"steps to solove mariadb ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)"},{"location":"notes_tech/mysql/#mysql-add-user-and-enable-remote-connect","text":"1 2 3 4 create user wl identified by 'wl' ; GRANT ALL privileges on * . * to wl @'%' identified by 'wl' ; flush privileges ; show grants for wl ;","title":"mysql add user and enable remote connect"},{"location":"notes_tech/mysql/#incase-firewall-has-been-enable","text":"1 2 3 4 5 6 7 centos 7 sudo firewall-cmd --list-ports sudo firewall-cmd --zone = public --add-port = 3306 /tcp --permanent sudo firewall-cmd --reload sudo systemctl stop firewalld.service sudo systemctl disable firewalld.service firewall-cmd --zone = public --remove-port = 80 /tcp --permanent","title":"incase firewall has been enable"},{"location":"notes_tech/nice_tools/","text":"Nice Tools \u00b6 Fiddler\uff1a\u975e\u5e38\u597d\u7528\u7684Web\u524d\u7aef\u8c03\u8bd5\u5de5\u5177\uff0c\u5f53\u7136\u662f\u9488\u5bf9\u5e95\u5c42http\u534f\u8bae\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4f7f\u7528Chrome\u7b49\u81ea\u5e26\u7684\u8c03\u8bd5\u5de5\u5177\u4e5f\u8db3\u591f\u4e86\uff0c\u7279\u6b8a\u60c5\u51b5\u8fd8\u5f97\u7528\u5b83\u53bb\u5904\u7406 wireshark\uff1a\u77e5\u540d\u7684\u7f51\u7edc\u6570\u636e\u5305\u5206\u6790\u5de5\u5177 Cmder:\u66ff\u4ee3Windows Cmd\u7684\u5229\u5668 RegexBuddy:\u5f3a\u5927\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6d4b\u8bd5\u5de5\u5177 Soure Insight\uff1a\u6e90\u4ee3\u7801\u9605\u8bfb\u795e\u5668 SublimeText\uff1a\u7a0b\u5e8f\u5458\u6700\u7231\u7684\u7f16\u8f91\u5668 Database.NET\uff1a\u4e00\u4e2a\u901a\u7528\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5ba2\u6237\u7aef\uff0c\u57fa\u4e8e.NET 4.0\u5f00\u53d1\u7684\uff0c\u505a\u7b80\u5355\u7684\u5904\u7406\u8fd8\u662f\u86ee\u65b9\u4fbf\u7684 Navicat Premium\uff1a\u652f\u6301MySql\u3001PostgreSQL\u3001Oracle\u3001Sqlite\u548cSQL Server\u7684\u5ba2\u6237\u7aef\uff0c\u901a\u7528\u6027\u4e0a\u4e0d\u5982Database.NET\uff0c\u4f46\u6027\u80fd\u65b9\u9762\u6bd4Database.NET\u597d\u5f88\u591a\uff0c\u81ea\u5e26\u5907\u4efd\u529f\u80fd\u4e5f\u7528\u4e8e\u6570\u636e\u5e93\u5b9a\u65f6\u5907\u4efd\u3002 Synergy : \u5c40\u57df\u7f51\u5185\u4e00\u5957\u952e\u76d8\u9f20\u6807\u63a7\u5236\u591a\u53f0\u7535\u8111 DameWare\uff1a\u8fdc\u7a0b\u534f\u52a9\u5de5\u5177\u96c6\uff08\u6211\u5728\u516c\u53f8\u4e3b\u8981\u63a7\u5236\u5927\u5c4f\u5e55\u7528\uff09 Radmin: \u8fdc\u7a0b\u63a7\u5236\u5de5\u5177\uff0c\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684 DameWare\uff0c\u8fd8\u8981\u7834\u89e3\uff0c\u5bf9Win7\u652f\u6301\u7684\u4e0d\u597d\uff0c\u8fd8\u662f\u53d1\u73b0\u8fd9\u4e2a\u597d\u7528 Listary\uff1a\u80fd\u6781\u5927\u5e45\u5ea6\u63d0\u9ad8\u4f60 Windows \u6587\u4ef6\u6d4f\u89c8\u4e0e\u641c\u7d22\u901f\u5ea6\u6548\u7387\u7684\u300c\u8d85\u7ea7\u795e\u5668\u300d Clover\uff1a\u7ed9\u8d44\u6e90\u7ba1\u7406\u5668\u52a0\u4e0a\u591a\u6807\u7b7e WinLaunch\uff1a\u6a21\u62dfMac OS\u7684Launch\u5de5\u5177 Fritzing\uff1a\u7ed8\u5236\u7535\u8def\u56fe LICEcap\uff1agif\u6559\u7a0b\u5236\u4f5cgit\uff0c svn\uff1a\u7248\u672c\u63a7\u5236\u7cfb\u7edfEnigma Virtual Box\uff08\u5c06exe\uff0cdll\u7b49\u5c01\u88c5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\uff09 Open DBDiff(\u9488\u5bf9SqlServer)\u6570\u636e\u5e93\u540c\u6b65 SymmetricDS\uff1a\u6570\u636e\u5e93\u540c\u6b65 BIEE,Infomatica\uff0cSPSS\uff0cweka\uff0cR\u8bed\u8a00\uff1a\u6570\u636e\u5206\u6790 CodeSmith\uff0cLightSwitch\uff1a\u4ee3\u7801\u751f\u6210 Pandoc\uff1aMarkdown\u8f6c\u6362\u5de5\u5177\uff0c\u51fa\u4e66\u7528\u7684\u3002\u4ee5\u524d\u73a9\u8fc7docbook\uff0c\u4e0d\u8fc7\u73b0\u5728\u8fd8\u662fMarkdown\u76db\u884c\u554a\u3002 Window Magnet[Mac]\uff1a\u589e\u5f3aMac\u7a97\u53e3\u7ba1\u7406\u529f\u80fd\uff0c\u60f3Win7\u4e00\u6837\u5177\u6709\u7a97\u53e3\u62d6\u653e\u5230\u5c4f\u5e55\u8fb9\u7f18\u81ea\u52a8\u8c03\u6574\u7684\u529f\u80fd log explorer\uff1a\u67e5\u770bSqlServer\u65e5\u5fd7dependency walker\uff1a\u67e5\u8be2Windows\u5e94\u7528\u7a0b\u5e8fdll\u4f9d\u8d56\u9879 Shairport4w\uff1a\u5c06iPhone\uff0ciPad\uff0ciPod\u4e0a\u7684\u97f3\u9891\u901a\u8fc7AirPlay\u534f\u8bae\u4f20\u8f93\u5230PC\u4e0a ngrok\uff1a\u5185\u7f51\u7a7f\u900f\u5de5\u5177Axure:\u5feb\u901f\u539f\u578b\u5236\u4f5c\u5de5\u5177\uff0c\u8fd8\u6709\u4e2a\u5728\u7ebf\u4f5c\u56fe\u7684\u5de5\u5177\u56fd\u5185\u7684\u4e00\u4e2a\u521b\u4e1a\u56e2\u961f\u505a\u7684\uff0c\u7528\u7740\u5f88\u4e0d\u9519 http://www.processon.com tinyproxy:\uff08Linux\uff09\u5c0f\u578b\u7684\u4ee3\u7406\u670d\u52a1\u5668\u652f\u6301http\u548chttps\u534f\u8baeEaseUS Partition Master\uff1a\u8d85\u7ea7\u7b80\u5355\u7684\u5206\u533a\u8c03\u6574\u5de5\u5177\uff0c\u901f\u5ea6\u8fd8\u662f\u86ee\u5feb\u7684\uff0cC\u76d8\u4e0d\u591f\u7528\u4e86\u5c31\u7528\u5b83\u4eceD\u76d8\u5212\u70b9\u7a7a\u95f4\u5427\uff0c\u4e0d\u7528\u91cd\u88c5\u7cfb\u7edf\u8fd9\u4e48\u6298\u817e\u54e6\u3002 CheatEngine\uff1a\u73a9\u6e38\u620f\u4fee\u6539\u5185\u5b58\u503c\u5fc5\u5907\u795e\u5668\uff08\u8bb0\u5f97\u6211\u5728\u73a9\u8f69\u8f95\u52516\u7684\u65f6\u5019\u5c31\u7528\u7684\u5b83\uff0c\u8d85\u7ea7\u65b9\u4fbf\u5462\uff09 ApkIDE:Android\u53cd\u7f16\u8bd1\u795e\u5668\u7ffb\u3001\u5899\u5de5\u5177\uff08\u81ea|\u7531|\u95e8\u3001\u5929\u884c\u6d4f\u89c8\u5668\uff09 odbg: \u53cd\u6c47\u7f16 typora: markdown postman: post burp suit: secu test webscrab: web injection sqlmap: sql injection studio 3t: Mongodb GUI heidisql meld binwalk","title":"Nice Tools"},{"location":"notes_tech/nice_tools/#nice-tools","text":"Fiddler\uff1a\u975e\u5e38\u597d\u7528\u7684Web\u524d\u7aef\u8c03\u8bd5\u5de5\u5177\uff0c\u5f53\u7136\u662f\u9488\u5bf9\u5e95\u5c42http\u534f\u8bae\u7684\uff0c\u4e00\u822c\u60c5\u51b5\u4f7f\u7528Chrome\u7b49\u81ea\u5e26\u7684\u8c03\u8bd5\u5de5\u5177\u4e5f\u8db3\u591f\u4e86\uff0c\u7279\u6b8a\u60c5\u51b5\u8fd8\u5f97\u7528\u5b83\u53bb\u5904\u7406 wireshark\uff1a\u77e5\u540d\u7684\u7f51\u7edc\u6570\u636e\u5305\u5206\u6790\u5de5\u5177 Cmder:\u66ff\u4ee3Windows Cmd\u7684\u5229\u5668 RegexBuddy:\u5f3a\u5927\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u6d4b\u8bd5\u5de5\u5177 Soure Insight\uff1a\u6e90\u4ee3\u7801\u9605\u8bfb\u795e\u5668 SublimeText\uff1a\u7a0b\u5e8f\u5458\u6700\u7231\u7684\u7f16\u8f91\u5668 Database.NET\uff1a\u4e00\u4e2a\u901a\u7528\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u5ba2\u6237\u7aef\uff0c\u57fa\u4e8e.NET 4.0\u5f00\u53d1\u7684\uff0c\u505a\u7b80\u5355\u7684\u5904\u7406\u8fd8\u662f\u86ee\u65b9\u4fbf\u7684 Navicat Premium\uff1a\u652f\u6301MySql\u3001PostgreSQL\u3001Oracle\u3001Sqlite\u548cSQL Server\u7684\u5ba2\u6237\u7aef\uff0c\u901a\u7528\u6027\u4e0a\u4e0d\u5982Database.NET\uff0c\u4f46\u6027\u80fd\u65b9\u9762\u6bd4Database.NET\u597d\u5f88\u591a\uff0c\u81ea\u5e26\u5907\u4efd\u529f\u80fd\u4e5f\u7528\u4e8e\u6570\u636e\u5e93\u5b9a\u65f6\u5907\u4efd\u3002 Synergy : \u5c40\u57df\u7f51\u5185\u4e00\u5957\u952e\u76d8\u9f20\u6807\u63a7\u5236\u591a\u53f0\u7535\u8111 DameWare\uff1a\u8fdc\u7a0b\u534f\u52a9\u5de5\u5177\u96c6\uff08\u6211\u5728\u516c\u53f8\u4e3b\u8981\u63a7\u5236\u5927\u5c4f\u5e55\u7528\uff09 Radmin: \u8fdc\u7a0b\u63a7\u5236\u5de5\u5177\uff0c\u7528\u4e86\u4e00\u6bb5\u65f6\u95f4\u7684 DameWare\uff0c\u8fd8\u8981\u7834\u89e3\uff0c\u5bf9Win7\u652f\u6301\u7684\u4e0d\u597d\uff0c\u8fd8\u662f\u53d1\u73b0\u8fd9\u4e2a\u597d\u7528 Listary\uff1a\u80fd\u6781\u5927\u5e45\u5ea6\u63d0\u9ad8\u4f60 Windows \u6587\u4ef6\u6d4f\u89c8\u4e0e\u641c\u7d22\u901f\u5ea6\u6548\u7387\u7684\u300c\u8d85\u7ea7\u795e\u5668\u300d Clover\uff1a\u7ed9\u8d44\u6e90\u7ba1\u7406\u5668\u52a0\u4e0a\u591a\u6807\u7b7e WinLaunch\uff1a\u6a21\u62dfMac OS\u7684Launch\u5de5\u5177 Fritzing\uff1a\u7ed8\u5236\u7535\u8def\u56fe LICEcap\uff1agif\u6559\u7a0b\u5236\u4f5cgit\uff0c svn\uff1a\u7248\u672c\u63a7\u5236\u7cfb\u7edfEnigma Virtual Box\uff08\u5c06exe\uff0cdll\u7b49\u5c01\u88c5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\uff09 Open DBDiff(\u9488\u5bf9SqlServer)\u6570\u636e\u5e93\u540c\u6b65 SymmetricDS\uff1a\u6570\u636e\u5e93\u540c\u6b65 BIEE,Infomatica\uff0cSPSS\uff0cweka\uff0cR\u8bed\u8a00\uff1a\u6570\u636e\u5206\u6790 CodeSmith\uff0cLightSwitch\uff1a\u4ee3\u7801\u751f\u6210 Pandoc\uff1aMarkdown\u8f6c\u6362\u5de5\u5177\uff0c\u51fa\u4e66\u7528\u7684\u3002\u4ee5\u524d\u73a9\u8fc7docbook\uff0c\u4e0d\u8fc7\u73b0\u5728\u8fd8\u662fMarkdown\u76db\u884c\u554a\u3002 Window Magnet[Mac]\uff1a\u589e\u5f3aMac\u7a97\u53e3\u7ba1\u7406\u529f\u80fd\uff0c\u60f3Win7\u4e00\u6837\u5177\u6709\u7a97\u53e3\u62d6\u653e\u5230\u5c4f\u5e55\u8fb9\u7f18\u81ea\u52a8\u8c03\u6574\u7684\u529f\u80fd log explorer\uff1a\u67e5\u770bSqlServer\u65e5\u5fd7dependency walker\uff1a\u67e5\u8be2Windows\u5e94\u7528\u7a0b\u5e8fdll\u4f9d\u8d56\u9879 Shairport4w\uff1a\u5c06iPhone\uff0ciPad\uff0ciPod\u4e0a\u7684\u97f3\u9891\u901a\u8fc7AirPlay\u534f\u8bae\u4f20\u8f93\u5230PC\u4e0a ngrok\uff1a\u5185\u7f51\u7a7f\u900f\u5de5\u5177Axure:\u5feb\u901f\u539f\u578b\u5236\u4f5c\u5de5\u5177\uff0c\u8fd8\u6709\u4e2a\u5728\u7ebf\u4f5c\u56fe\u7684\u5de5\u5177\u56fd\u5185\u7684\u4e00\u4e2a\u521b\u4e1a\u56e2\u961f\u505a\u7684\uff0c\u7528\u7740\u5f88\u4e0d\u9519 http://www.processon.com tinyproxy:\uff08Linux\uff09\u5c0f\u578b\u7684\u4ee3\u7406\u670d\u52a1\u5668\u652f\u6301http\u548chttps\u534f\u8baeEaseUS Partition Master\uff1a\u8d85\u7ea7\u7b80\u5355\u7684\u5206\u533a\u8c03\u6574\u5de5\u5177\uff0c\u901f\u5ea6\u8fd8\u662f\u86ee\u5feb\u7684\uff0cC\u76d8\u4e0d\u591f\u7528\u4e86\u5c31\u7528\u5b83\u4eceD\u76d8\u5212\u70b9\u7a7a\u95f4\u5427\uff0c\u4e0d\u7528\u91cd\u88c5\u7cfb\u7edf\u8fd9\u4e48\u6298\u817e\u54e6\u3002 CheatEngine\uff1a\u73a9\u6e38\u620f\u4fee\u6539\u5185\u5b58\u503c\u5fc5\u5907\u795e\u5668\uff08\u8bb0\u5f97\u6211\u5728\u73a9\u8f69\u8f95\u52516\u7684\u65f6\u5019\u5c31\u7528\u7684\u5b83\uff0c\u8d85\u7ea7\u65b9\u4fbf\u5462\uff09 ApkIDE:Android\u53cd\u7f16\u8bd1\u795e\u5668\u7ffb\u3001\u5899\u5de5\u5177\uff08\u81ea|\u7531|\u95e8\u3001\u5929\u884c\u6d4f\u89c8\u5668\uff09 odbg: \u53cd\u6c47\u7f16 typora: markdown postman: post burp suit: secu test webscrab: web injection sqlmap: sql injection studio 3t: Mongodb GUI heidisql meld binwalk","title":"Nice Tools"},{"location":"notes_tech/robots/","text":"Robots.txt \u00b6 Robots.txt \u662f\u4e2aTXT\u6587\u4ef6\u7528\u6765\u544a\u8bc9\u641c\u7d22\u5f15\u64ce\u54ea\u4e9b\u9875\u9762\u53ef\u4ee5\u6293\u53d6\uff0c\u54ea\u4e9b\u9875\u9762\u4e0d\u80fd\u6293\u53d6\u3002 1994\u5e74\uff0cREP\u534f\u8bae\uff08Robots Exclusion Standard Protocol\uff09\u8bde\u751f\uff0cREP\u534f\u8bae\u89c4\u5b9a\u4e86\u7f51\u7edc\u641c\u7d22\u5f15\u64ce\u722c\u866b\u884c\u4e3a\u9996\u5148\u8bbf\u95ee\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0brobots.txt\u6587\u4ef6\u3002 \u5728\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u653e\u4e00\u4e2arobots.txt\u6587\u672c\u6587\u4ef6\uff08\u5982 https://ruihan.tech/robots.txt \uff09\uff0c\u91cc\u9762\u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u7684\u7f51\u7edc\u722c\u866b\u80fd\u8bbf\u95ee\u7684\u9875\u9762\u548c\u7981\u6b62\u8bbf\u95ee\u7684\u9875\u9762\uff0c\u6307\u5b9a\u7684\u9875\u9762\u7531\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u3002\u7f51\u7edc\u722c\u866b\u5728\u91c7\u96c6\u8fd9\u4e2a\u7f51\u7ad9\u4e4b\u524d\uff0c\u9996\u5148\u83b7\u53d6\u5230\u8fd9\u4e2arobots.txt\u6587\u672c\u6587\u4ef6\uff0c\u7136\u540e\u89e3\u6790\u5230\u5176\u4e2d\u7684\u89c4\u5219\uff0c\u7136\u540e\u6839\u636e\u89c4\u5219\u6765\u91c7\u96c6\u7f51\u7ad9\u7684\u6570\u636e\u3002 Robots\u534f\u8bae\u89c4\u5219 \u00b6 user-agent: denotes the name of the crawler (the names can be found in the Robots Database) disallow: prevents crawling of certain files, directories or web pages allow: overwrites disallow and allows crawling of files, web pages, and directories sitemap (optional): shows the location of the sitemap *: stands for any number of character $: stands for the end of the line Robots example \u00b6 1 2 3 4 5 6 7 8 9 10 User-agent: * Disallow: /login/ # \u7981\u6b62\u8bbf\u95ee\u7279\u5b9a\u76ee\u5f55 Disallow: /card/ Disallow: /fotos/ Disallow: /temp/ Disallow: /search/ Disallow: /*.pdf$ Disallow: / # \u7981\u6b62\u8bbf\u95ee Sitemap: https://www.example.com/sitemap.xml","title":"Robots.txt"},{"location":"notes_tech/robots/#robotstxt","text":"Robots.txt \u662f\u4e2aTXT\u6587\u4ef6\u7528\u6765\u544a\u8bc9\u641c\u7d22\u5f15\u64ce\u54ea\u4e9b\u9875\u9762\u53ef\u4ee5\u6293\u53d6\uff0c\u54ea\u4e9b\u9875\u9762\u4e0d\u80fd\u6293\u53d6\u3002 1994\u5e74\uff0cREP\u534f\u8bae\uff08Robots Exclusion Standard Protocol\uff09\u8bde\u751f\uff0cREP\u534f\u8bae\u89c4\u5b9a\u4e86\u7f51\u7edc\u641c\u7d22\u5f15\u64ce\u722c\u866b\u884c\u4e3a\u9996\u5148\u8bbf\u95ee\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0brobots.txt\u6587\u4ef6\u3002 \u5728\u7f51\u7ad9\u6839\u76ee\u5f55\u4e0b\u653e\u4e00\u4e2arobots.txt\u6587\u672c\u6587\u4ef6\uff08\u5982 https://ruihan.tech/robots.txt \uff09\uff0c\u91cc\u9762\u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u7684\u7f51\u7edc\u722c\u866b\u80fd\u8bbf\u95ee\u7684\u9875\u9762\u548c\u7981\u6b62\u8bbf\u95ee\u7684\u9875\u9762\uff0c\u6307\u5b9a\u7684\u9875\u9762\u7531\u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u3002\u7f51\u7edc\u722c\u866b\u5728\u91c7\u96c6\u8fd9\u4e2a\u7f51\u7ad9\u4e4b\u524d\uff0c\u9996\u5148\u83b7\u53d6\u5230\u8fd9\u4e2arobots.txt\u6587\u672c\u6587\u4ef6\uff0c\u7136\u540e\u89e3\u6790\u5230\u5176\u4e2d\u7684\u89c4\u5219\uff0c\u7136\u540e\u6839\u636e\u89c4\u5219\u6765\u91c7\u96c6\u7f51\u7ad9\u7684\u6570\u636e\u3002","title":"Robots.txt"},{"location":"notes_tech/robots/#robots","text":"user-agent: denotes the name of the crawler (the names can be found in the Robots Database) disallow: prevents crawling of certain files, directories or web pages allow: overwrites disallow and allows crawling of files, web pages, and directories sitemap (optional): shows the location of the sitemap *: stands for any number of character $: stands for the end of the line","title":"Robots\u534f\u8bae\u89c4\u5219"},{"location":"notes_tech/robots/#robots-example","text":"1 2 3 4 5 6 7 8 9 10 User-agent: * Disallow: /login/ # \u7981\u6b62\u8bbf\u95ee\u7279\u5b9a\u76ee\u5f55 Disallow: /card/ Disallow: /fotos/ Disallow: /temp/ Disallow: /search/ Disallow: /*.pdf$ Disallow: / # \u7981\u6b62\u8bbf\u95ee Sitemap: https://www.example.com/sitemap.xml","title":"Robots example"},{"location":"notes_tech/vagrant/","text":"Vagrant Notes \u00b6 Vagrant \u547d\u4ee4\u7b80\u4ecb \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 vagrant init { boxname } \u521d\u59cb\u5316 vagrant status \u67e5\u770b\u865a\u62df\u673a\u8fd0\u884c\u72b6\u6001 vagrant up \u542f\u52a8\u865a\u62df\u673a vagrant halt \u5173\u95ed\u865a\u62df\u5316\u5f00\u53d1\u73af\u5883 vagrant reload \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u540e \uff0c \u91cd\u542f\u865a\u62df\u5316\u5f00\u53d1\u73af\u5883 vagrant port \u67e5\u770b\u7aef\u53e3\u6620\u5c04 vagrant box add { target } -- name box { boxname } vagrant box list \u67e5\u770b\u5f53\u524d\u53ef\u7528\u7684\u865a\u62df\u5316\u5f00\u53d1\u73af\u5883 vagrant box remove boxname \u5220\u9664\u6307\u5b9a\u7684box\u73af\u5883 vagrant global - status \u67e5\u770b\u73af\u5883 vagrant destroy \u9500\u6bc1\u865a\u62df\u673a vagrant package \u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684VirtualBox\u865a\u62df\u73af\u5883\u6253\u5305\u6210\u4e00\u4e2a\u53ef\u91cd\u590d\u4f7f\u7528\u7684box \u521b\u5efa\u865a\u62df\u673a \u00b6 1 2 3 4 vagrant init phusion / ubuntu - 14.04 - amd64 vagrant up vagrant ssh vagrant halt \u6253\u5305\u521b\u5efa\u865a\u673a \u00b6 1\u3001\u6253\u5305\u865a\u62df\u673a 1 vagrant package 2\u3001\u5f53\u524d\u76ee\u5f55\u5c31\u4f1a\u751f\u6210package.box\uff0c\u4e4b\u540e\u65b0\u5efa\u865a\u62df\u673a\u5219\u53ef\u4f7f\u7528\u8fd9\u4e2abox\u3002 1 2 3 vagrant box add my_box ~ /package.box vagrant init my_box vagrant up","title":"Vagrant Notes"},{"location":"notes_tech/vagrant/#vagrant-notes","text":"","title":"Vagrant Notes"},{"location":"notes_tech/vagrant/#vagrant","text":"1 2 3 4 5 6 7 8 9 10 11 12 vagrant init { boxname } \u521d\u59cb\u5316 vagrant status \u67e5\u770b\u865a\u62df\u673a\u8fd0\u884c\u72b6\u6001 vagrant up \u542f\u52a8\u865a\u62df\u673a vagrant halt \u5173\u95ed\u865a\u62df\u5316\u5f00\u53d1\u73af\u5883 vagrant reload \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u540e \uff0c \u91cd\u542f\u865a\u62df\u5316\u5f00\u53d1\u73af\u5883 vagrant port \u67e5\u770b\u7aef\u53e3\u6620\u5c04 vagrant box add { target } -- name box { boxname } vagrant box list \u67e5\u770b\u5f53\u524d\u53ef\u7528\u7684\u865a\u62df\u5316\u5f00\u53d1\u73af\u5883 vagrant box remove boxname \u5220\u9664\u6307\u5b9a\u7684box\u73af\u5883 vagrant global - status \u67e5\u770b\u73af\u5883 vagrant destroy \u9500\u6bc1\u865a\u62df\u673a vagrant package \u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684VirtualBox\u865a\u62df\u73af\u5883\u6253\u5305\u6210\u4e00\u4e2a\u53ef\u91cd\u590d\u4f7f\u7528\u7684box","title":"Vagrant \u547d\u4ee4\u7b80\u4ecb"},{"location":"notes_tech/vagrant/#_1","text":"1 2 3 4 vagrant init phusion / ubuntu - 14.04 - amd64 vagrant up vagrant ssh vagrant halt","title":"\u521b\u5efa\u865a\u62df\u673a"},{"location":"notes_tech/vagrant/#_2","text":"1\u3001\u6253\u5305\u865a\u62df\u673a 1 vagrant package 2\u3001\u5f53\u524d\u76ee\u5f55\u5c31\u4f1a\u751f\u6210package.box\uff0c\u4e4b\u540e\u65b0\u5efa\u865a\u62df\u673a\u5219\u53ef\u4f7f\u7528\u8fd9\u4e2abox\u3002 1 2 3 vagrant box add my_box ~ /package.box vagrant init my_box vagrant up","title":"\u6253\u5305\u521b\u5efa\u865a\u673a"},{"location":"notes_tech/network_tools/nc/","text":"Netcat (nc) command examples \u00b6 Here\u2019s the syntax for the nc command: 1 nc [ options ] [ hostname ] [ port ] The syntax can vary depending on the application, but for most uses, your commands will follow this basic pattern. 1. Create a Connection Using TCP with netcat command \u00b6 As I mentioned earlier, the core functionality of netcat is joining two machines together. You can set up a connection using TCP to connect two separate machines, you can also emulate that connection using the terminal. The Listening Machine: 1 nc -l 8080 This command opens port 8080 and tells the machine to begin listening on this port. In order to establish a connection, you will use another terminal and enter the following. The Client Machine: 1 nc 127 .0.0.1 8080 You can also use \u2018localhost\u2019 in place of the IP, or use the IP of your second PC here if you are making a remote connection. That\u2019s it, you have opened a TCP port and established a connection between two systems. Quick Intro to TCP vs UDP \u00b6 Why do we use TCP by default? TCP is an older technology than UDP and they operate at different levels of the OSI model. I will give a quick overview of the differences between them and describe some situations where you may choose one over the other. TCP has strong error-correction capabilities. What does that mean? Basically, this means that while data packets are in transit from system to system, there are continuous tests being performed. These tests make sure that the information from System A is copied accurately to System B. This is a very simplified version of what happens as information travels across networks (the internet). There are many protocols used in internet communication, though, not just TCP. UDP has different rules than TCP. Neither is necessarily \u201cbetter\u201d but they can each excel at performing different tasks. Why would we use UDP over TCP or vice versa? It depends on the application. TCP is slower, but more reliable for transferring data accurately. UDP can be chosen in situations where speed is more important than reliability transmitting information. One example of this is streaming data, like video. Video can be transferred more quickly over UDP, and even if there are errors in the transmission, they are less likely to impact the user experience. 2. Create a connection using UDP with nc command \u00b6 The steps for making a UDP connection are virtually identical to the ones we\u2019ve already followed. You will add an option flag to specify that the type of port you want to open is UDP, not the default TCP. 1 nc -l -u 999 It\u2019s that simple. That\u2019s all you need to do to open UDP port \u2018999\u2019. You might wonder if you can use TCP and UDP with the same port number. You can, because they are separate protocols. 3. Use nc command to transfer files between remote systems \u00b6 There are other methods for transferring files from one system to another. You can also use the netcat command for this purpose. For this example, I created a demo that illustrates a remote file transfer from my Linux machine to my MacBook Pro. Set up the Linux PC to Receive \u00b6 1 nc -l 9999 > fromMac.file You begin listening on the receiving machine on TCP port 9999. The \u2018>\u2018 tells the machine you are expecting a file to be transferred. The name that follows is the local name for the file. Set up the Mac PC to Send \u00b6 nc 172.20.1.168 9999 < toLinux.file The IP address here belongs to the Linux machine. You flip the symbol to \u2018<\u2018 and the file \u2018toLinux.file\u2019 will be copied onto the remote machine as \u2018fromMac.file\u2019. 4. Use nc command for port scanning \u00b6 There might be more efficient options for port scanning, but it can be done with netcat. Since netcat comes installed by default on most operating systems, it\u2019s nice to know how to do this if you need to do some quick troubleshooting. You\u2019ll use the \u2018-n\u2019 and display verbose output. 1 nc -v -n 127 .0.0.1 1 -100 This attempts to make a connection to ports between 1-100. Port 80 is HTTP, as I\u2019m sure many of you know. This port is normally open on machines because it is used for connecting to the internet. When I use this command, I\u2019m actually attempting to connect to all of the ports between 1-100. It successfully connects to port 80, but generates an error message from Apache. I end up with some HTML output on the terminal because my computer sees it as a bad page request. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [ ... ] nc: connect to 127 .0.0.1 port 77 ( tcp ) failed: Connection refused nc: connect to 127 .0.0.1 port 78 ( tcp ) failed: Connection refused nc: connect to 127 .0.0.1 port 79 ( tcp ) failed: Connection refused Connection to 127 .0.0.1 80 port [ tcp/* ] succeeded! HTTP/1.1 400 Bad Request Date: Fri, 20 Dec 2019 15 :08:29 GMT Server: Apache/2.4.38 ( Ubuntu ) Content-Length: 310 Connection: close Content-Type: text/html ; charset = iso-8859-1 <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\" > <html><head> <title>400 Bad Request</title> </head><body> <h1>Bad Request</h1> <p>Your browser sent a request that this server could not understand.<br /> </p> <hr> <address>Apache/2.4.38 ( Ubuntu ) Server at pop-os.localdomain Port 80 </address> </body></html> Zero I/O Mode \u00b6 To avoid this, you can use the -z flag, which stands for zero input/output. This is the built-in port-scanning mode for netcat. I still get the same language, but it does not actually make the connection to port 80 generating the bad request error. Instead it continues through all scanned ports. 5. Chat with Netcat \u00b6 This is a more fun way to use netcat. When you establish a TCP connection like above, you can actually \u201cchat\u201d from machine to machine. It\u2019s less novel in an era where texting and chat applications are ubiquitous but this would have totally blown someone\u2019s mind back in 1996. Bonus Tip: Create a backdoor with nc command \u00b6 I will show this for demonstration purposes only. Please be aware that unauthorized use of this command could be considered criminal activity in your locale. In fact, this command no longer does anything with \u2018nc\u2019. There are ways to do it, but you will have to find them somewhere else. Once again, this is intended only to show the capability. The -e flag makes something executable. A common way for malicious actors to gain access is to create such a backdoor on an open port and use that to execute scripts or otherwise manipulate the file system. So if the attacker somehow gained the access to the \u201cvictim\u201d machine, he/she can create a backdoor like this: 1 nc -l 9999 -e /bin/bash Now the attackers can use this backdoor to access into the system remotely and execute commands. So, from attacker\u2019s system: 1 2 3 4 5 6 7 8 9 10 11 nc 192 .168.1.10 9999 ls Desktop Documents Downloads Music Pictures Public Templates Videos firefox linuxhandbook.com This enables the attacker to access your computer remotely from the command line. Once connected, I can run bash commands similarly to how I could if I was using the computer directly. I\u2019m sure you can imagine how someone without the best of intentions could abuse this power. This makes it very important to monitor port activity on any network. I hope you enjoyed this brief introduction to the netcat command. As always, let us know what you think in the comment section.","title":"Netcat (nc) command examples"},{"location":"notes_tech/network_tools/nc/#netcat-nc-command-examples","text":"Here\u2019s the syntax for the nc command: 1 nc [ options ] [ hostname ] [ port ] The syntax can vary depending on the application, but for most uses, your commands will follow this basic pattern.","title":"Netcat (nc) command examples"},{"location":"notes_tech/network_tools/nc/#1-create-a-connection-using-tcp-with-netcat-command","text":"As I mentioned earlier, the core functionality of netcat is joining two machines together. You can set up a connection using TCP to connect two separate machines, you can also emulate that connection using the terminal. The Listening Machine: 1 nc -l 8080 This command opens port 8080 and tells the machine to begin listening on this port. In order to establish a connection, you will use another terminal and enter the following. The Client Machine: 1 nc 127 .0.0.1 8080 You can also use \u2018localhost\u2019 in place of the IP, or use the IP of your second PC here if you are making a remote connection. That\u2019s it, you have opened a TCP port and established a connection between two systems.","title":"1. Create a Connection Using TCP with netcat command"},{"location":"notes_tech/network_tools/nc/#quick-intro-to-tcp-vs-udp","text":"Why do we use TCP by default? TCP is an older technology than UDP and they operate at different levels of the OSI model. I will give a quick overview of the differences between them and describe some situations where you may choose one over the other. TCP has strong error-correction capabilities. What does that mean? Basically, this means that while data packets are in transit from system to system, there are continuous tests being performed. These tests make sure that the information from System A is copied accurately to System B. This is a very simplified version of what happens as information travels across networks (the internet). There are many protocols used in internet communication, though, not just TCP. UDP has different rules than TCP. Neither is necessarily \u201cbetter\u201d but they can each excel at performing different tasks. Why would we use UDP over TCP or vice versa? It depends on the application. TCP is slower, but more reliable for transferring data accurately. UDP can be chosen in situations where speed is more important than reliability transmitting information. One example of this is streaming data, like video. Video can be transferred more quickly over UDP, and even if there are errors in the transmission, they are less likely to impact the user experience.","title":"Quick Intro to TCP vs UDP"},{"location":"notes_tech/network_tools/nc/#2-create-a-connection-using-udp-with-nc-command","text":"The steps for making a UDP connection are virtually identical to the ones we\u2019ve already followed. You will add an option flag to specify that the type of port you want to open is UDP, not the default TCP. 1 nc -l -u 999 It\u2019s that simple. That\u2019s all you need to do to open UDP port \u2018999\u2019. You might wonder if you can use TCP and UDP with the same port number. You can, because they are separate protocols.","title":"2. Create a connection using UDP with nc command"},{"location":"notes_tech/network_tools/nc/#3-use-nc-command-to-transfer-files-between-remote-systems","text":"There are other methods for transferring files from one system to another. You can also use the netcat command for this purpose. For this example, I created a demo that illustrates a remote file transfer from my Linux machine to my MacBook Pro.","title":"3. Use nc command to transfer files between remote systems"},{"location":"notes_tech/network_tools/nc/#set-up-the-linux-pc-to-receive","text":"1 nc -l 9999 > fromMac.file You begin listening on the receiving machine on TCP port 9999. The \u2018>\u2018 tells the machine you are expecting a file to be transferred. The name that follows is the local name for the file.","title":"Set up the Linux PC to Receive"},{"location":"notes_tech/network_tools/nc/#set-up-the-mac-pc-to-send","text":"nc 172.20.1.168 9999 < toLinux.file The IP address here belongs to the Linux machine. You flip the symbol to \u2018<\u2018 and the file \u2018toLinux.file\u2019 will be copied onto the remote machine as \u2018fromMac.file\u2019.","title":"Set up the Mac PC to Send"},{"location":"notes_tech/network_tools/nc/#4-use-nc-command-for-port-scanning","text":"There might be more efficient options for port scanning, but it can be done with netcat. Since netcat comes installed by default on most operating systems, it\u2019s nice to know how to do this if you need to do some quick troubleshooting. You\u2019ll use the \u2018-n\u2019 and display verbose output. 1 nc -v -n 127 .0.0.1 1 -100 This attempts to make a connection to ports between 1-100. Port 80 is HTTP, as I\u2019m sure many of you know. This port is normally open on machines because it is used for connecting to the internet. When I use this command, I\u2019m actually attempting to connect to all of the ports between 1-100. It successfully connects to port 80, but generates an error message from Apache. I end up with some HTML output on the terminal because my computer sees it as a bad page request. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 [ ... ] nc: connect to 127 .0.0.1 port 77 ( tcp ) failed: Connection refused nc: connect to 127 .0.0.1 port 78 ( tcp ) failed: Connection refused nc: connect to 127 .0.0.1 port 79 ( tcp ) failed: Connection refused Connection to 127 .0.0.1 80 port [ tcp/* ] succeeded! HTTP/1.1 400 Bad Request Date: Fri, 20 Dec 2019 15 :08:29 GMT Server: Apache/2.4.38 ( Ubuntu ) Content-Length: 310 Connection: close Content-Type: text/html ; charset = iso-8859-1 <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\" > <html><head> <title>400 Bad Request</title> </head><body> <h1>Bad Request</h1> <p>Your browser sent a request that this server could not understand.<br /> </p> <hr> <address>Apache/2.4.38 ( Ubuntu ) Server at pop-os.localdomain Port 80 </address> </body></html>","title":"4. Use nc command for port scanning"},{"location":"notes_tech/network_tools/nc/#zero-io-mode","text":"To avoid this, you can use the -z flag, which stands for zero input/output. This is the built-in port-scanning mode for netcat. I still get the same language, but it does not actually make the connection to port 80 generating the bad request error. Instead it continues through all scanned ports.","title":"Zero I/O Mode"},{"location":"notes_tech/network_tools/nc/#5-chat-with-netcat","text":"This is a more fun way to use netcat. When you establish a TCP connection like above, you can actually \u201cchat\u201d from machine to machine. It\u2019s less novel in an era where texting and chat applications are ubiquitous but this would have totally blown someone\u2019s mind back in 1996.","title":"5. Chat with Netcat"},{"location":"notes_tech/network_tools/nc/#bonus-tip-create-a-backdoor-with-nc-command","text":"I will show this for demonstration purposes only. Please be aware that unauthorized use of this command could be considered criminal activity in your locale. In fact, this command no longer does anything with \u2018nc\u2019. There are ways to do it, but you will have to find them somewhere else. Once again, this is intended only to show the capability. The -e flag makes something executable. A common way for malicious actors to gain access is to create such a backdoor on an open port and use that to execute scripts or otherwise manipulate the file system. So if the attacker somehow gained the access to the \u201cvictim\u201d machine, he/she can create a backdoor like this: 1 nc -l 9999 -e /bin/bash Now the attackers can use this backdoor to access into the system remotely and execute commands. So, from attacker\u2019s system: 1 2 3 4 5 6 7 8 9 10 11 nc 192 .168.1.10 9999 ls Desktop Documents Downloads Music Pictures Public Templates Videos firefox linuxhandbook.com This enables the attacker to access your computer remotely from the command line. Once connected, I can run bash commands similarly to how I could if I was using the computer directly. I\u2019m sure you can imagine how someone without the best of intentions could abuse this power. This makes it very important to monitor port activity on any network. I hope you enjoyed this brief introduction to the netcat command. As always, let us know what you think in the comment section.","title":"Bonus Tip: Create a backdoor with nc command"},{"location":"notes_tech/ocr/tesseract/","text":"tesseract OCR \u00b6 tesseract \u7528\u6cd5 \u00b6 tesseract \u2013help-extra tesseract \u2013psm 7 test.png stdout digits tesseract -l chi_sim \u2013psm 7 20201214091752.jpg stdout tesseract \u2013list-langs \u2013psm \u53c2\u6570 \u00b6 0\uff1a\u5b9a\u5411\u811a\u672c\u76d1\u6d4b\uff08OSD\uff09 1\uff1a \u4f7f\u7528OSD\u81ea\u52a8\u5206\u9875 2 \uff1a\u81ea\u52a8\u5206\u9875\uff0c\u4f46\u662f\u4e0d\u4f7f\u7528OSD\u6216OCR\uff08Optical Character Recognition\uff0c\u5149\u5b66\u5b57\u7b26\u8bc6\u522b\uff09 3 \uff1a\u5168\u81ea\u52a8\u5206\u9875\uff0c\u4f46\u662f\u6ca1\u6709\u4f7f\u7528OSD\uff08\u9ed8\u8ba4\uff09 4 \uff1a\u5047\u8bbe\u53ef\u53d8\u5927\u5c0f\u7684\u4e00\u4e2a\u6587\u672c\u5217\u3002 5 \uff1a\u5047\u8bbe\u5782\u76f4\u5bf9\u9f50\u6587\u672c\u7684\u5355\u4e2a\u7edf\u4e00\u5757\u3002 6 \uff1a\u5047\u8bbe\u4e00\u4e2a\u7edf\u4e00\u7684\u6587\u672c\u5757\u3002 7 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u6587\u672c\u884c\u3002 8 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u8bcd\u3002 9 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5706\u4e2d\u7684\u5355\u4e2a\u8bcd\u3002 10 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u5b57\u7b26\u3002 Tesseract\u8bad\u7ec3 \u00b6 \u5927\u4f53\u6d41\u7a0b\u4e3a\uff1a\u5b89\u88c5jTessBoxEditor -> \u83b7\u53d6\u6837\u672c\u6587\u4ef6 -> Merge\u6837\u672c\u6587\u4ef6 \u2013> \u751f\u6210BOX\u6587\u4ef6 -> \u5b9a\u4e49\u5b57\u7b26\u914d\u7f6e\u6587\u4ef6 -> \u5b57\u7b26\u77eb\u6b63 -> \u6267\u884c\u6279\u5904\u7406\u6587\u4ef6 -> \u5c06\u751f\u6210\u7684traineddata\u653e\u5165tessdata\u4e2d \u83b7\u53d6\u6837\u672c\u6587\u4ef6 \u00b6 \u753b\u56fe\u6253\u5f00\uff0c\u53e6\u5b58\u4e3atif\u6587\u4ef6 Merge\u6837\u672c\u6587\u4ef6 \u00b6 \u6253\u5f00jTessBoxEditor\uff0cTools->Merge TIFF\uff0c\u5c06\u6837\u672c\u6587\u4ef6\u5168\u90e8\u9009\u4e0a\uff0c\u5e76\u5c06\u5408\u5e76\u6587\u4ef6\u4fdd\u5b58 \u751f\u6210BOX\u6587\u4ef6 \u00b6 tesseract testlang.normal.exp0.tif -l chi_sim testlang.normal.exp0 makebox \u5b9a\u4e49\u5b57\u7b26\u914d\u7f6e\u6587\u4ef6 \u00b6 \u5728\u76ee\u6807\u6587\u4ef6\u5939\u5185\u751f\u6210\u4e00\u4e2a\u540d\u4e3afont_properties\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a font 0 0 0 0 0 \u3010\u8bed\u6cd5\u3011\uff1a fontname\u4e3a\u5b57\u4f53\u540d\u79f0\uff0citalic\u4e3a\u659c\u4f53\uff0cbold\u4e3a\u9ed1\u4f53\u5b57\uff0cfixed\u4e3a\u9ed8\u8ba4\u5b57\u4f53\uff0cserif\u4e3a\u886c\u7ebf\u5b57\u4f53\uff0cfraktur\u5fb7\u6587\u9ed1\u5b57\u4f53\uff0c1\u548c0\u4ee3\u8868\u6709\u548c\u65e0\uff0c\u7cbe\u7ec6\u533a\u5206\u65f6\u53ef\u4f7f\u7528\u3002 \u5b57\u7b26\u77eb\u6b63 \u00b6 \u6253\u5f00jTessBoxEditor\uff0cBOX Editor -> Open\uff0c\u6253\u5f00num.font.exp0.tif\uff1b\u77eb\u6b63 \u4e0a\u7684\u5b57\u7b26 \u6267\u884c\u6279\u5904\u7406\u6587\u4ef6 \u00b6 \u5728\u76ee\u6807\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u6279\u5904\u7406\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 rem \u6267\u884c\u6539\u6279\u5904\u7406\u524d\u5148\u8981\u76ee\u5f55\u4e0b\u521b\u5efafont_properties\u6587\u4ef6 echo Run Tesseract for Training.. tesseract.exe num.font.exp0.tif num.font.exp0 nobatch box.train echo Compute the Character Set.. unicharset_extractor.exe num.font.exp0.box mftraining -F font_properties -U unicharset -O num.unicharset num.font.exp0.tr echo Clustering.. cntraining.exe num.font.exp0.tr echo Rename Files.. rename normproto num.normproto rename inttemp num.inttemp rename pffmtable num.pffmtable rename shapetable num.shapetable echo Create Tessdata.. combine_tessdata.exe num. echo . & pause \u5c06\u751f\u6210\u7684traineddata\u653e\u5165tessdata\u4e2d \u00b6 \u6700\u540e\u5c06num.trainddata\u590d\u5236\u5230Tesseract-OCR\u4e2dtessdata\u6587\u4ef6\u5939\u5373\u53ef\u3002 \u6700\u540e\u7684\u6d4b\u8bd5 \u00b6","title":"tesseract OCR"},{"location":"notes_tech/ocr/tesseract/#tesseract-ocr","text":"","title":"tesseract OCR"},{"location":"notes_tech/ocr/tesseract/#tesseract","text":"tesseract \u2013help-extra tesseract \u2013psm 7 test.png stdout digits tesseract -l chi_sim \u2013psm 7 20201214091752.jpg stdout tesseract \u2013list-langs","title":"tesseract \u7528\u6cd5"},{"location":"notes_tech/ocr/tesseract/#-psm","text":"0\uff1a\u5b9a\u5411\u811a\u672c\u76d1\u6d4b\uff08OSD\uff09 1\uff1a \u4f7f\u7528OSD\u81ea\u52a8\u5206\u9875 2 \uff1a\u81ea\u52a8\u5206\u9875\uff0c\u4f46\u662f\u4e0d\u4f7f\u7528OSD\u6216OCR\uff08Optical Character Recognition\uff0c\u5149\u5b66\u5b57\u7b26\u8bc6\u522b\uff09 3 \uff1a\u5168\u81ea\u52a8\u5206\u9875\uff0c\u4f46\u662f\u6ca1\u6709\u4f7f\u7528OSD\uff08\u9ed8\u8ba4\uff09 4 \uff1a\u5047\u8bbe\u53ef\u53d8\u5927\u5c0f\u7684\u4e00\u4e2a\u6587\u672c\u5217\u3002 5 \uff1a\u5047\u8bbe\u5782\u76f4\u5bf9\u9f50\u6587\u672c\u7684\u5355\u4e2a\u7edf\u4e00\u5757\u3002 6 \uff1a\u5047\u8bbe\u4e00\u4e2a\u7edf\u4e00\u7684\u6587\u672c\u5757\u3002 7 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u6587\u672c\u884c\u3002 8 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u8bcd\u3002 9 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5706\u4e2d\u7684\u5355\u4e2a\u8bcd\u3002 10 \uff1a\u5c06\u56fe\u50cf\u89c6\u4e3a\u5355\u4e2a\u5b57\u7b26\u3002","title":"--psm \u53c2\u6570"},{"location":"notes_tech/ocr/tesseract/#tesseract_1","text":"\u5927\u4f53\u6d41\u7a0b\u4e3a\uff1a\u5b89\u88c5jTessBoxEditor -> \u83b7\u53d6\u6837\u672c\u6587\u4ef6 -> Merge\u6837\u672c\u6587\u4ef6 \u2013> \u751f\u6210BOX\u6587\u4ef6 -> \u5b9a\u4e49\u5b57\u7b26\u914d\u7f6e\u6587\u4ef6 -> \u5b57\u7b26\u77eb\u6b63 -> \u6267\u884c\u6279\u5904\u7406\u6587\u4ef6 -> \u5c06\u751f\u6210\u7684traineddata\u653e\u5165tessdata\u4e2d","title":"Tesseract\u8bad\u7ec3"},{"location":"notes_tech/ocr/tesseract/#_1","text":"\u753b\u56fe\u6253\u5f00\uff0c\u53e6\u5b58\u4e3atif\u6587\u4ef6","title":"\u83b7\u53d6\u6837\u672c\u6587\u4ef6"},{"location":"notes_tech/ocr/tesseract/#merge","text":"\u6253\u5f00jTessBoxEditor\uff0cTools->Merge TIFF\uff0c\u5c06\u6837\u672c\u6587\u4ef6\u5168\u90e8\u9009\u4e0a\uff0c\u5e76\u5c06\u5408\u5e76\u6587\u4ef6\u4fdd\u5b58","title":"Merge\u6837\u672c\u6587\u4ef6"},{"location":"notes_tech/ocr/tesseract/#box","text":"tesseract testlang.normal.exp0.tif -l chi_sim testlang.normal.exp0 makebox","title":"\u751f\u6210BOX\u6587\u4ef6"},{"location":"notes_tech/ocr/tesseract/#_2","text":"\u5728\u76ee\u6807\u6587\u4ef6\u5939\u5185\u751f\u6210\u4e00\u4e2a\u540d\u4e3afont_properties\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a font 0 0 0 0 0 \u3010\u8bed\u6cd5\u3011\uff1a fontname\u4e3a\u5b57\u4f53\u540d\u79f0\uff0citalic\u4e3a\u659c\u4f53\uff0cbold\u4e3a\u9ed1\u4f53\u5b57\uff0cfixed\u4e3a\u9ed8\u8ba4\u5b57\u4f53\uff0cserif\u4e3a\u886c\u7ebf\u5b57\u4f53\uff0cfraktur\u5fb7\u6587\u9ed1\u5b57\u4f53\uff0c1\u548c0\u4ee3\u8868\u6709\u548c\u65e0\uff0c\u7cbe\u7ec6\u533a\u5206\u65f6\u53ef\u4f7f\u7528\u3002","title":"\u5b9a\u4e49\u5b57\u7b26\u914d\u7f6e\u6587\u4ef6"},{"location":"notes_tech/ocr/tesseract/#_3","text":"\u6253\u5f00jTessBoxEditor\uff0cBOX Editor -> Open\uff0c\u6253\u5f00num.font.exp0.tif\uff1b\u77eb\u6b63 \u4e0a\u7684\u5b57\u7b26","title":"\u5b57\u7b26\u77eb\u6b63"},{"location":"notes_tech/ocr/tesseract/#_4","text":"\u5728\u76ee\u6807\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a\u6279\u5904\u7406\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 rem \u6267\u884c\u6539\u6279\u5904\u7406\u524d\u5148\u8981\u76ee\u5f55\u4e0b\u521b\u5efafont_properties\u6587\u4ef6 echo Run Tesseract for Training.. tesseract.exe num.font.exp0.tif num.font.exp0 nobatch box.train echo Compute the Character Set.. unicharset_extractor.exe num.font.exp0.box mftraining -F font_properties -U unicharset -O num.unicharset num.font.exp0.tr echo Clustering.. cntraining.exe num.font.exp0.tr echo Rename Files.. rename normproto num.normproto rename inttemp num.inttemp rename pffmtable num.pffmtable rename shapetable num.shapetable echo Create Tessdata.. combine_tessdata.exe num. echo . & pause","title":"\u6267\u884c\u6279\u5904\u7406\u6587\u4ef6"},{"location":"notes_tech/ocr/tesseract/#traineddatatessdata","text":"\u6700\u540e\u5c06num.trainddata\u590d\u5236\u5230Tesseract-OCR\u4e2dtessdata\u6587\u4ef6\u5939\u5373\u53ef\u3002","title":"\u5c06\u751f\u6210\u7684traineddata\u653e\u5165tessdata\u4e2d"},{"location":"notes_tech/ocr/tesseract/#_5","text":"","title":"\u6700\u540e\u7684\u6d4b\u8bd5"}]}